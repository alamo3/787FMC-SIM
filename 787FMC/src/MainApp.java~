/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author newlife network
 */


import java.io.*;
import java.util.*;
import java.lang.*;
import com.google.common.collect.*;

import java.util.HashMap;
@SuppressWarnings("unchecked")
public class MainApp extends javax.swing.JFrame {
  
PropertiesChecker panelSelector;
FMCLogicTest accessLogic=new FMCLogicTest();
WaypoimtAccess navDataPull=new WaypoimtAccess();
findGpsPosition getLocation=new findGpsPosition();



    /**
     * 
     * Creates new form MainApp
     * 
     */




/////////ALL VARIABLES FROM 2/12/2018 LISTED HERE MAKING MY LIFE EASIER



// ALL BOOLEANS
boolean airportCachedOnceDep=false;


//ALL LISTS , HASHMAPS and ARRAYS
public static List<String> sids;
public static List <String> runways;
public List<String> Transitions;
Map<String,Sids> sidsDep=new LinkedHashMap<>();
public static List<String> rawDataStars;//=new LinkedList<>();
public static List<String> starsTransition;//=new LinkedList<>();
public static List<String> runwayAvail=new ArrayList<>();
public static Map<String,Stars> starsDep=new LinkedHashMap<>();
public static Map<String, Airways> airwaysList=new LinkedHashMap<>();
List<String> rteEntries=new ArrayList<>();
String [][] rteEntry = new String[2][5];
Map<String,Waypoints> wpts=new LinkedHashMap<>(); 
Multimap<String, Navaid> navaids = LinkedListMultimap.create();
    
   
    
    

// ALL STRING VARIABLES
String starSelectedDep;
String arrivalRunway;
String arrivalTransDep;
String arrivalApproachDep;
String arrivalTransArr;
String arrivalApproachArr;
public String runwaySelected;
public String TransSelected;
String cacheAirportDep="";
public String sidSelected;


//ALL INT VARIABLES
int listStarDep=0;
int listStarArr=0;
int listTransStarDep=0;
int listTransStarArr=0;
int listRun;
int listing=0;
public int listrun=0;
public int listtrans=0;
int legsDisplay=0;
int rtePages=1;



////////////////////////////////////END OF VARIABLES LISTED 



    public MainApp() {
      
        initComponents();
    panelSelector=new PropertiesChecker();
    intializePanel();
    panelSelector();
   getAirways();
    retrieveWpts();
    getNav();
    
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        LSKL4 = new javax.swing.JLabel();
        LSKL3 = new javax.swing.JLabel();
        LSKL2 = new javax.swing.JLabel();
        LSKL1 = new javax.swing.JLabel();
        LSKL5 = new javax.swing.JLabel();
        LSKL6 = new javax.swing.JLabel();
        LSKR6 = new javax.swing.JLabel();
        LSKR5 = new javax.swing.JLabel();
        LSKR4 = new javax.swing.JLabel();
        LSKR3 = new javax.swing.JLabel();
        LSKR2 = new javax.swing.JLabel();
        LSKR1 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        nextpage = new javax.swing.JLabel();
        InitRef = new javax.swing.JLabel();
        rte1 = new javax.swing.JLabel();
        deparr1 = new javax.swing.JLabel();
        alternate1 = new javax.swing.JLabel();
        vnav1 = new javax.swing.JLabel();
        fix1 = new javax.swing.JLabel();
        legs1 = new javax.swing.JLabel();
        hold1 = new javax.swing.JLabel();
        fmccomm = new javax.swing.JLabel();
        prog1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        navrad = new javax.swing.JLabel();
        prevpage = new javax.swing.JLabel();
        pagenumber = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.gray);
        setName("Main CDU"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 900));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(" 3");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(56, 8, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" 1");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setOpaque(true);
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(56, 20, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" 2");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel4.setOpaque(true);
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(56, 8, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" 4");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(" 5");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel6.setOpaque(true);
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 1, 0, 0);
        jPanel1.add(jLabel6, gridBagConstraints);

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText(" 6");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel7.setOpaque(true);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(jLabel7, gridBagConstraints);

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(" 7");
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel8.setOpaque(true);
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText(" 8");
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 1, 0, 0);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText(" 9");
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel10.setOpaque(true);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel10MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("  .");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel11.setOpaque(true);
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel1.add(jLabel11, gridBagConstraints);

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText(" 0");
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel12.setOpaque(true);
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel12MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 1, 0, 0);
        jPanel1.add(jLabel12, gridBagConstraints);

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Futura LtCn BT", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("+/-");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel13.setOpaque(true);
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/787 FMC ENTER.jpg"))); // NOI18N
        jLabel14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel14.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 23;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(65, 10, 0, 0);
        jPanel1.add(jLabel14, gridBagConstraints);

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("  A");
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel15.setOpaque(true);
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel15MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 20, 0, 0);
        jPanel1.add(jLabel15, gridBagConstraints);

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("  B");
        jLabel16.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel16.setOpaque(true);
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel16MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 10, 0, 0);
        jPanel1.add(jLabel16, gridBagConstraints);

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("  C");
        jLabel17.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel17.setOpaque(true);
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel17MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 9, 0, 0);
        jPanel1.add(jLabel17, gridBagConstraints);

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("  D");
        jLabel18.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel18.setOpaque(true);
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel18MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 10, 0, 0);
        jPanel1.add(jLabel18, gridBagConstraints);

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("  E");
        jLabel19.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel19.setOpaque(true);
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel19MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 62;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 6, 0, 0);
        jPanel1.add(jLabel19, gridBagConstraints);

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("  F");
        jLabel20.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel20.setOpaque(true);
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel20MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel1.add(jLabel20, gridBagConstraints);

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("  G");
        jLabel21.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel21.setOpaque(true);
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel21MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(jLabel21, gridBagConstraints);

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("  H");
        jLabel22.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel22MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 9, 0, 0);
        jPanel1.add(jLabel22, gridBagConstraints);

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("  I");
        jLabel23.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel23.setOpaque(true);
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel23MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 9, 0, 0);
        jPanel1.add(jLabel23, gridBagConstraints);

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("  J");
        jLabel24.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel24MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 42;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel1.add(jLabel24, gridBagConstraints);

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("  K");
        jLabel25.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel25.setOpaque(true);
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel25MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 0);
        jPanel1.add(jLabel25, gridBagConstraints);

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("  L");
        jLabel26.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel26.setOpaque(true);
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel26MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
        jPanel1.add(jLabel26, gridBagConstraints);

        jLabel27.setBackground(new java.awt.Color(0, 0, 0));
        jLabel27.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("  M");
        jLabel27.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel27MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 9, 0, 0);
        jPanel1.add(jLabel27, gridBagConstraints);

        jLabel28.setBackground(new java.awt.Color(0, 0, 0));
        jLabel28.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("  N");
        jLabel28.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel28.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel28.setOpaque(true);
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel28MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 9, 0, 0);
        jPanel1.add(jLabel28, gridBagConstraints);

        jLabel29.setBackground(new java.awt.Color(0, 0, 0));
        jLabel29.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("  O");
        jLabel29.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel29.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel29.setOpaque(true);
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel29MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 42;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel1.add(jLabel29, gridBagConstraints);

        jLabel30.setBackground(new java.awt.Color(0, 0, 0));
        jLabel30.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("  P");
        jLabel30.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel30.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel30.setOpaque(true);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel30MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
        jPanel1.add(jLabel30, gridBagConstraints);

        jLabel31.setBackground(new java.awt.Color(0, 0, 0));
        jLabel31.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("  Q");
        jLabel31.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel31.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel31.setOpaque(true);
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel31MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(jLabel31, gridBagConstraints);

        jLabel32.setBackground(new java.awt.Color(0, 0, 0));
        jLabel32.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("  R");
        jLabel32.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel32.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel32.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel32.setOpaque(true);
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel32MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel32, gridBagConstraints);

        jLabel33.setBackground(new java.awt.Color(0, 0, 0));
        jLabel33.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("  S");
        jLabel33.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel33.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel33.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel33.setOpaque(true);
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel33MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel33, gridBagConstraints);

        jLabel34.setBackground(new java.awt.Color(0, 0, 0));
        jLabel34.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("  T");
        jLabel34.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel34.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel34.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel34.setOpaque(true);
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel34MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 42;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        jPanel1.add(jLabel34, gridBagConstraints);

        jLabel35.setBackground(new java.awt.Color(0, 0, 0));
        jLabel35.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("  U");
        jLabel35.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel35.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel35.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel35.setOpaque(true);
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel35MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
        jPanel1.add(jLabel35, gridBagConstraints);

        jLabel36.setBackground(new java.awt.Color(0, 0, 0));
        jLabel36.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("  V");
        jLabel36.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel36.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel36.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel36.setOpaque(true);
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel36MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(jLabel36, gridBagConstraints);

        jLabel37.setBackground(new java.awt.Color(0, 0, 0));
        jLabel37.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("  W");
        jLabel37.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel37.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel37.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel37.setOpaque(true);
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel37MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel37, gridBagConstraints);

        jLabel38.setBackground(new java.awt.Color(0, 0, 0));
        jLabel38.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("  X");
        jLabel38.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel38.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel38.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel38.setOpaque(true);
        jLabel38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel38MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel38, gridBagConstraints);

        jLabel39.setBackground(new java.awt.Color(0, 0, 0));
        jLabel39.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("  Y");
        jLabel39.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel39.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel39.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel39.setOpaque(true);
        jLabel39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel39MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 42;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        jPanel1.add(jLabel39, gridBagConstraints);

        jLabel40.setBackground(new java.awt.Color(0, 0, 0));
        jLabel40.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("  Z");
        jLabel40.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel40.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel40.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel40.setOpaque(true);
        jLabel40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel40MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
        jPanel1.add(jLabel40, gridBagConstraints);

        jLabel41.setBackground(new java.awt.Color(0, 0, 0));
        jLabel41.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText(" SP");
        jLabel41.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel41.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel41.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel41.setOpaque(true);
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel41MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        jPanel1.add(jLabel41, gridBagConstraints);

        jLabel42.setBackground(new java.awt.Color(0, 0, 0));
        jLabel42.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText(" DEL");
        jLabel42.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel42.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel42.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel42.setOpaque(true);
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel42MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel42, gridBagConstraints);

        jLabel43.setBackground(new java.awt.Color(0, 0, 0));
        jLabel43.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("  /");
        jLabel43.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel43.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel43.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel43.setOpaque(true);
        jLabel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel43MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        jPanel1.add(jLabel43, gridBagConstraints);

        jLabel44.setBackground(new java.awt.Color(0, 0, 0));
        jLabel44.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText(" CLR");
        jLabel44.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel44.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel44.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel44.setOpaque(true);
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel44MousePressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 35;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 42;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        jPanel1.add(jLabel44, gridBagConstraints);

        jLabel45.setBackground(new java.awt.Color(0, 0, 0));
        jLabel45.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("PREV PAGE");
        jLabel45.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel45.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel45.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel45.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 10, 0, 0);
        jPanel1.add(jLabel45, gridBagConstraints);

        jLabel46.setBackground(new java.awt.Color(0, 0, 0));
        jLabel46.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("NEXT PAGE");
        jLabel46.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel46.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel46.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel46.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 15;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 21;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 6, 0, 0);
        jPanel1.add(jLabel46, gridBagConstraints);

        jLabel47.setBackground(new java.awt.Color(0, 0, 0));
        jLabel47.setFont(new java.awt.Font("Futura LtCn BT", 0, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("    EXEC");
        jLabel47.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel47.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel47.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 55;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 63;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 0);
        jPanel1.add(jLabel47, gridBagConstraints);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 290, 630));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/787FFMCDisplay.PNG"))); // NOI18N
        jLabel1.setOpaque(true);
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(30, 0, 460, 780);

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(0, 0, 0));
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextField1.setPreferredSize(new java.awt.Dimension(6, 24));
        jLayeredPane1.setLayer(jTextField1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jTextField1);
        jTextField1.setBounds(100, 376, 340, 32);

        LSKL4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL4MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL4, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL4);
        LSKL4.setBounds(46, 226, 30, 60);

        LSKL3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL3MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL3, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL3);
        LSKL3.setBounds(47, 175, 30, 60);

        LSKL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL2MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL2, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL2);
        LSKL2.setBounds(48, 125, 30, 60);

        LSKL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL1MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL1);
        LSKL1.setBounds(48, 71, 30, 60);

        LSKL5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL5MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL5, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL5);
        LSKL5.setBounds(46, 276, 30, 60);

        LSKL6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKL6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKL6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKL6MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKL6, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKL6);
        LSKL6.setBounds(46, 328, 30, 60);

        LSKR6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR6MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR6, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR6);
        LSKR6.setBounds(452, 328, 30, 60);

        LSKR5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR5MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR5, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR5);
        LSKR5.setBounds(452, 276, 30, 60);

        LSKR4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR4MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR4, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR4);
        LSKR4.setBounds(452, 226, 30, 60);

        LSKR3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR3MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR3, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR3);
        LSKR3.setBounds(452, 175, 30, 60);

        LSKR2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR2MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR2, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR2);
        LSKR2.setBounds(452, 122, 30, 60);

        LSKR1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/FMCSelect.png"))); // NOI18N
        LSKR1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LSKR1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LSKR1MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(LSKR1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(LSKR1);
        LSKR1.setBounds(453, 70, 30, 60);

        jLabel48.setFont(new java.awt.Font("Futura Lt BT", 0, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(204, 204, 204));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("IDENT");
        jLayeredPane1.setLayer(jLabel48, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel48);
        jLabel48.setBounds(180, 50, 180, 30);

        jLabel49.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(204, 204, 204));
        jLabel49.setText("Model");
        jLayeredPane1.setLayer(jLabel49, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel49);
        jLabel49.setBounds(90, 130, 130, 20);

        jLabel50.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(204, 204, 204));
        jLabel50.setText("787-9");
        jLayeredPane1.setLayer(jLabel50, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel50);
        jLabel50.setBounds(90, 150, 350, 30);

        jLabel51.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(204, 204, 204));
        jLabel51.setText("Model");
        jLayeredPane1.setLayer(jLabel51, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel51);
        jLabel51.setBounds(90, 70, 130, 20);

        jLabel52.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(204, 204, 204));
        jLabel52.setText("787-9");
        jLayeredPane1.setLayer(jLabel52, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel52);
        jLabel52.setBounds(90, 90, 350, 30);

        jLabel53.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(204, 204, 204));
        jLabel53.setText("787-9");
        jLayeredPane1.setLayer(jLabel53, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel53);
        jLabel53.setBounds(90, 200, 350, 30);

        jLabel54.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(204, 204, 204));
        jLabel54.setText("Model");
        jLayeredPane1.setLayer(jLabel54, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel54);
        jLabel54.setBounds(90, 180, 130, 20);

        jLabel55.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(204, 204, 204));
        jLabel55.setText("Model");
        jLayeredPane1.setLayer(jLabel55, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel55);
        jLabel55.setBounds(90, 230, 130, 20);

        jLabel56.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(204, 204, 204));
        jLabel56.setText("787-9");
        jLayeredPane1.setLayer(jLabel56, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel56);
        jLabel56.setBounds(90, 250, 170, 30);

        jLabel57.setFont(new java.awt.Font("Futura LtCn BT", 0, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(204, 204, 204));
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel57.setText("                                      POS INIT  >");
        jLabel57.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel57.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLayeredPane1.setLayer(jLabel57, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel57);
        jLabel57.setBounds(270, 340, 170, 30);

        jLabel58.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(204, 204, 204));
        jLabel58.setText("Model");
        jLayeredPane1.setLayer(jLabel58, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel58);
        jLabel58.setBounds(90, 280, 130, 20);

        jLabel59.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(204, 204, 204));
        jLabel59.setText("787-9");
        jLayeredPane1.setLayer(jLabel59, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel59);
        jLabel59.setBounds(90, 300, 170, 30);

        jLabel60.setFont(new java.awt.Font("Futura LtCn BT", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(204, 204, 204));
        jLabel60.setText("< INDEX");
        jLayeredPane1.setLayer(jLabel60, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel60);
        jLabel60.setBounds(90, 340, 170, 30);

        jLabel61.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(204, 204, 204));
        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel61.setText("Model");
        jLabel61.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel61, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel61);
        jLabel61.setBounds(310, 70, 130, 20);

        jLabel62.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(204, 204, 204));
        jLabel62.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel62.setText("787-9");
        jLabel62.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel62, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel62);
        jLabel62.setBounds(220, 90, 220, 30);

        jLabel63.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(204, 204, 204));
        jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel63.setText("Model");
        jLabel63.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel63, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel63);
        jLabel63.setBounds(310, 130, 130, 20);

        jLabel64.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(204, 204, 204));
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel64.setText("787-9");
        jLabel64.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel64, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel64);
        jLabel64.setBounds(270, 150, 170, 30);

        jLabel65.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(204, 204, 204));
        jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel65.setText("Model");
        jLabel65.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel65, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel65);
        jLabel65.setBounds(310, 180, 130, 20);

        jLabel66.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(204, 204, 204));
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel66.setText("787-9");
        jLabel66.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel66, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel66);
        jLabel66.setBounds(270, 200, 170, 30);

        jLabel67.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(204, 204, 204));
        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel67.setText("Model");
        jLabel67.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel67, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel67);
        jLabel67.setBounds(310, 230, 130, 20);

        jLabel68.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(204, 204, 204));
        jLabel68.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel68.setText("787-9");
        jLabel68.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel68, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel68);
        jLabel68.setBounds(270, 250, 170, 30);

        jLabel69.setFont(new java.awt.Font("Futura LtCn BT", 0, 16)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(204, 204, 204));
        jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel69.setText("Model");
        jLabel69.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel69, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel69);
        jLabel69.setBounds(310, 280, 130, 20);

        jLabel70.setFont(new java.awt.Font("Futura LtCn BT", 0, 22)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(204, 204, 204));
        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel70.setText("787-9");
        jLabel70.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLayeredPane1.setLayer(jLabel70, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(jLabel70);
        jLabel70.setBounds(250, 300, 190, 30);

        nextpage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextpage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nextpageMousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(nextpage, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(nextpage);
        nextpage.setBounds(430, 500, 60, 40);

        InitRef.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InitRef.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                InitRefMousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(InitRef, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(InitRef);
        InitRef.setBounds(40, 410, 50, 40);

        rte1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rte1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rte1MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(rte1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(rte1);
        rte1.setBounds(90, 410, 60, 40);

        deparr1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deparr1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deparr1MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(deparr1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(deparr1);
        deparr1.setBounds(150, 410, 50, 40);

        alternate1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(alternate1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(alternate1);
        alternate1.setBounds(210, 410, 50, 40);

        vnav1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(vnav1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(vnav1);
        vnav1.setBounds(260, 410, 60, 40);

        fix1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(fix1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(fix1);
        fix1.setBounds(30, 460, 60, 40);

        legs1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        legs1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                legs1MousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(legs1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(legs1);
        legs1.setBounds(90, 460, 60, 40);

        hold1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(hold1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(hold1);
        hold1.setBounds(150, 460, 50, 40);

        fmccomm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(fmccomm, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(fmccomm);
        fmccomm.setBounds(205, 458, 53, 40);

        prog1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(prog1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(prog1);
        prog1.setBounds(262, 460, 53, 40);

        jButton1.setText("Exit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jLayeredPane1.add(jButton1);
        jButton1.setBounds(400, 810, 51, 23);

        navrad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLayeredPane1.setLayer(navrad, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(navrad);
        navrad.setBounds(30, 500, 60, 40);

        prevpage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        prevpage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                prevpageMousePressed(evt);
            }
        });
        jLayeredPane1.setLayer(prevpage, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(prevpage);
        prevpage.setBounds(370, 500, 60, 40);

        pagenumber.setForeground(new java.awt.Color(204, 204, 204));
        pagenumber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pagenumber.setText("PAGE 1/1");
        jLayeredPane1.setLayer(pagenumber, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane1.add(pagenumber);
        pagenumber.setBounds(368, 50, 70, 14);

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 30, 490, 860));

        pack();
    }// </editor-fold>//GEN-END:initComponents
int clicked=0;
    private void jLabel44MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MousePressed
      try{
        String currentText=jTextField1.getText();
        clicked++;
        
        
        //clicked++;
       if(clicked<3){
            jTextField1.setText(currentText.substring(0,currentText.length()-1));        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel44MousePressed
       else if(clicked>=3){
 jTextField1.setText("");
 clicked=0;
 }
      }catch (Exception e){}
    }
    
    private void jLabel43MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel43MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"/");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel43MousePressed

    private void jLabel42MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText("DELETE");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel42MousePressed

    private void jLabel41MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+" ");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel41MousePressed

    private void jLabel40MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel40MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"Z");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel40MousePressed

    private void jLabel39MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel39MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"Y");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel39MousePressed

    private void jLabel38MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel38MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"X");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel38MousePressed

    private void jLabel37MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"W");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel37MousePressed

    private void jLabel36MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"V");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel36MousePressed

    private void jLabel35MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"U");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel35MousePressed

    private void jLabel34MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"T");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel34MousePressed

    private void jLabel33MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"S");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel33MousePressed

    private void jLabel32MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"R");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel32MousePressed

    private void jLabel31MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"Q");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel31MousePressed

    private void jLabel30MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"P");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel30MousePressed

    private void jLabel29MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"O");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel29MousePressed

    private void jLabel28MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"N");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel28MousePressed

    private void jLabel27MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"M");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel27MousePressed

    private void jLabel26MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"L");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel26MousePressed

    private void jLabel25MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"K");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MousePressed

    private void jLabel24MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"J");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel24MousePressed

    private void jLabel23MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"I");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel23MousePressed

    private void jLabel22MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"H");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MousePressed

    private void jLabel21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"G");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MousePressed

    private void jLabel20MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"F");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel20MousePressed

    private void jLabel19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"E");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MousePressed

    private void jLabel18MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"D");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel18MousePressed

    private void jLabel17MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"C");   // TODO add your handling code here:
    }//GEN-LAST:event_jLabel17MousePressed

    private void jLabel16MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"B");   // TODO add your handling code here:
    }//GEN-LAST:event_jLabel16MousePressed

    private void jLabel15MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"A");       // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MousePressed

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {                                      

        if(jTextField1.getText().equals("")){
            jTextField1.setText("+");

        }else{
            String currentText=jTextField1.getText();
            int length=currentText.length();
            if(currentText.charAt(length-1)=='-'){
                currentText=jTextField1.getText();
                currentText=currentText.substring(0,currentText.length()-1)+"+";
                jTextField1.setText(currentText);        // TODO add your handling code here:
    }
        else if(currentText.charAt(length-1)=='+'){
    currentText=jTextField1.getText();
    currentText=currentText.substring(0,currentText.length()-1)+"-";
    jTextField1.setText(currentText);        // TODO add your handling code here:

}else{
    jLabel54.setText(currentText+"+");  
}
        }
     
        
        }
    

   
 String [] temp;
 String [][]temp1;
public void performAction(String x, String y, String z){
    String button=x;
    String text=y;
    String state=z;
    
    if(text!=null||text!=""){
    
        switch(button){
         case "Left1": if(state.equals("posinit")){
             if(Arrays.asList(temp=accessLogic.getAirports()).contains(text)==true){
             
             String [] temp=accessLogic.getAirportLatLong(text);
             String finalData = text +"     "+ temp[0] +"      " +temp[1]+"     "+temp[2];
             jLabel52.setFont(new java.awt.Font("Futura LtCn BT", 0, 14));
             panelSelector.writeProperty("refairport", finalData);jTextField1.setText("");
             }else{
                 jTextField1.setText("Entry Invalid - Airport Not Found");
             }
         
         }
         if(state.equals("deparr")){
             sidAndRunwayDisplayer();
             
         }
         
         
         if(state.equals("rtepage2")){
          String lineCap=jLabel52.getText();
          if(lineCap.equals("----")==false){
            
          }
           
         }
         
         if(state.equals("rtepage1")){
           
           
         }
         
         if(state.equals("rtepagedep1")){
             if(sidSelected==null){
                 sidSelected=jLabel52.getText();
                sidAndRunwayDisplayer();
                temp1=rtePagesStore.get(1);
                temp1[0][1]=sidSelected;
                rtePagesStore.replace(1,temp1);
                 
             }else {
                 
              sidSelected=null;
              sidAndRunwayDisplayer();
             }
             
         }
         
         if(state.equals("transselect")){
          sidSelected=null;
           panelSelector.writeProperty("runwaydep","----");
          sidAndRunwayDisplayer();
         
         }
         
         if(panelSelector.retrieveProperty("panelstate").equals("stardep")||panelSelector.retrieveProperty("panelstate").equals("transSelectDepStar")){
          if(starSelectedDep==null){
           starSelectedDep=jLabel52.getText();
           displayStarsandRunways();
          }else if(starSelectedDep!=null){
           starSelectedDep=null;
           displayStarsandRunways();
          }
             
         }
         
         
         
         if(state.equals("perfinit")){panelSelector.writeProperty("groundweight", text);jTextField1.setText("");}
         
         
          if(state.equals("rte")){
              
              if(Arrays.asList(temp=accessLogic.getAirports()).contains(text)==true){
             
             
             
             panelSelector.writeProperty("origin", text);jTextField1.setText("");
             
             if(airportCachedOnceDep==false){
                cacheAirportDep=panelSelector.retrieveProperty("origin");
                 airportCachedOnceDep=true;
                 getDataStars();
                 getSidData();
             }
             if(airportCachedOnceDep==true){
               if(cacheAirportDep.equals(panelSelector.retrieveProperty("origin"))==false){
                 sidSelected=null;
                  listing=0;
                  runwaySelected=null;
                  panelSelector.writeProperty("runwaydep","----");
                 TransSelected=null;
                 listrun=0;
                  listtrans=0;
                 cacheAirportDep=panelSelector.retrieveProperty("origin");
                 if(rawDataStars!=null||rawDataStars.isEmpty()==false){
                 rawDataStars.clear();
                 }
                 if(starsTransition!=null||starsTransition.isEmpty()==false){
                 starsTransition.clear();
                 }
                 if(runwayAvail!=null||runwayAvail.isEmpty()==false){
                 runwayAvail.clear();
                 }
                 getSidData();
                 getDataStars();
               }
             }
             }else{
                 jTextField1.setText("Entry Invalid - Airport Not Found");
             }
         
          
          }
          
          
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "ident");jTextField1.setText("");}
            
            
            break;
             case "Left2": if(state.equals("posinit")){panelSelector.writeProperty("gate", text);jTextField1.setText("");}
             if(state.equals("perfinit")){panelSelector.writeProperty("fuel", text);jTextField1.setText("");}
          if(state.equals("rte")){
            String [] runwaysAvail=accessLogic.getRunways(panelSelector.retrieveProperty("origin"));
            
            if(Arrays.asList(runwaysAvail).contains(text)){
              panelSelector.writeProperty("runwaydep", text);jTextField1.setText("");
            }else{
             jTextField1.setText("Entry Invalid - Runway Not Found"); 
            }
            
            
          
          }
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "posinit");}
             if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
          if(starSelectedDep==null){
           starSelectedDep=jLabel50.getText();
           displayStarsandRunways();
          }else{
           starSelectedDep=null;
           displayStarsandRunways();
          }
             
         }
            
             if(state.equals("rtepagedep1")){
                 
             if(sidSelected==null){
                 sidSelected=jLabel50.getText();
                 sidAndRunwayDisplayer();
                 
             }else{
                 
              sidSelected=null;
             panelSelector.writeProperty("runwaydep","----");
              sidAndRunwayDisplayer();
             }
             
         }
             if(state.equals("transselect")){
                 if(TransSelected==null&&(jLabel50.getText().equals("")==false||jLabel50.getText().equals(null))==false){
              TransSelected=jLabel50.getText();   
                 jLabel50.setText(jLabel50.getText()+"<SEL>");
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 
                 }else if(TransSelected==null){
                 TransSelected=jLabel50.getText();   
                 jLabel50.setText(jLabel50.getText()+"<SEL>");
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 }else if(TransSelected!=null){
                     if(jLabel50.getText().contains("<SEL>")){
                       String text1=jLabel50.getText().replaceAll("<SEL>","");
                       jLabel50.setText(text1);
                       
                     TransSelected=null;
                     
                     }else if((jLabel50.getText().contains("<SEL>"))==false){
                      TransSelected=jLabel50.getText(); 
                       jLabel50.setText(jLabel50.getText()+"<SEL>");
                       
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                     }
                  
                     
                     
                 }
                 
             }
             
             if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[1][0]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
             
             
            
            break;
            case "Left3": if(state.equals("posinit")){}
          if(state.equals("rte")){}
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "perfinit");}
            if(state.equals("perfinit")){panelSelector.writeProperty("zfw", text);jTextField1.setText("");}
            
             if(state.equals("rtepagedep1")){
             if(sidSelected==null){
                 sidSelected=jLabel53.getText();
                 System.out.println(jLabel53.getText());
                 sidAndRunwayDisplayer();
                 
             }else{
                 
              sidSelected=null;
               panelSelector.writeProperty("runwaydep","----");
              sidAndRunwayDisplayer();
             }
             
         }
            
              if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
          if(starSelectedDep==null){
           starSelectedDep=jLabel53.getText();
           displayStarsandRunways();
          }else{
            
           starSelectedDep=null;
           displayStarsandRunways();
          }
             
         }
              
               if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[2][0]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
              
              
              
             if(state.equals("transselect")){
                 if(TransSelected==null&&(jLabel53.getText().equals("")==false||jLabel53.getText().equals(null))==false){
              TransSelected=jLabel53.getText();   
                 jLabel53.setText(jLabel53.getText()+"<SEL>");
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 
                 }else if(TransSelected==null){
                 TransSelected=jLabel53.getText();   
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText()+"<SEL>");
                 }else if(TransSelected!=null){
                     if(jLabel53.getText().contains("<SEL>")){
                       String text1=jLabel53.getText().replaceAll("<SEL>","");
                       jLabel53.setText(text1);
                       
                     TransSelected=null;
                     
                     }else if((jLabel53.getText().contains("<SEL>"))==false){
                      TransSelected=jLabel53.getText(); 
                       jLabel53.setText(jLabel53.getText()+"<SEL>");
                        jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
             
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                     }
                  
                     
                     
                 }
                 
             }
             
             
            
            break;
            case "Left4": if(state.equals("posinit")){}
          if(state.equals("rte")){}
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "takeoffinit");}
            if(state.equals("perfinit")){panelSelector.writeProperty("reserves", text);jTextField1.setText("");}
            
             if(state.equals("rtepagedep1")){
             if(sidSelected==null){
                 sidSelected=jLabel56.getText();
                 sidAndRunwayDisplayer();
                 
             }else{
                 panelSelector.writeProperty("runwaydep","----");
              sidSelected=null;
              sidAndRunwayDisplayer();
             }
             
         }
              if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[3][0]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
             
             
             
              if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
          if(starSelectedDep==null){
           starSelectedDep=jLabel56.getText();
           displayStarsandRunways();
          }else{
           starSelectedDep=null;
           displayStarsandRunways();
          }
             
         }
            
             if(state.equals("transselect")){
                 if(TransSelected==null&&(jLabel56.getText().equals("")==false||jLabel56.getText().equals(null))==false){
              TransSelected=jLabel56.getText();   
                 jLabel56.setText(jLabel56.getText()+"<SEL>");
                 
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 }else if(TransSelected==null){
                 TransSelected=jLabel56.getText();   
                 jLabel56.setText(jLabel56.getText()+"<SEL>");
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 }else if(TransSelected!=null){
                     if(jLabel56.getText().contains("<SEL>")){
                       String text1=jLabel56.getText().replaceAll("<SEL>","");
                       jLabel56.setText(text1);
                       
                     TransSelected=null;
                     
                     }else if((jLabel56.getText().contains("<SEL>"))==false){
                      TransSelected=jLabel56.getText(); 
                       jLabel56.setText(jLabel56.getText()+"<SEL>");
                        jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                     }
                  
                     
                     
                 }
                 
             }
             
            break;
            case "Left5": if(state.equals("posinit")){}
          if(state.equals("rte")){}
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "approachinit");}
            if(state.equals("perfinit")){}
            
             if(state.equals("rtepagedep1")){
             if(sidSelected==null){
                 sidSelected=jLabel59.getText();
                 sidAndRunwayDisplayer();
                 
             }else{
                 panelSelector.writeProperty("runwaydep","----");
              sidSelected=null;
              sidAndRunwayDisplayer();
             }
             
         }
             
              
             
              if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
          if(starSelectedDep==null){
           starSelectedDep=jLabel59.getText();
           displayStarsandRunways();
          }else{
           starSelectedDep=null;
           displayStarsandRunways();
          }
             
         }
             
             if(state.equals("transselect")){
                 if(TransSelected==null&&(jLabel59.getText().equals("")==false||jLabel59.getText().equals(null))==false){
              TransSelected=jLabel59.getText();   
                 jLabel59.setText(jLabel59.getText()+"<SEL>");
                 jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 }else if(TransSelected==null){
                 TransSelected=jLabel59.getText();   
                 jLabel59.setText(jLabel59.getText()+"<SEL>");
                  jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 jLabel59.setText(jLabel59.getText().replaceAll("<SEL>",""));
                 }else if(TransSelected!=null){
                     if(jLabel59.getText().contains("<SEL>")){
                       String text1=jLabel59.getText().replaceAll("<SEL>","");
                       jLabel59.setText(text1);
                       
                     TransSelected=null;
                      
                     }else if((jLabel59.getText().contains("<SEL>"))==false){
                      TransSelected=jLabel59.getText(); 
                       jLabel59.setText(jLabel59.getText()+"<SEL>");
                        jLabel50.setText(jLabel50.getText().replaceAll("<SEL>",""));
                 jLabel53.setText(jLabel53.getText().replaceAll("<SEL>",""));
                 jLabel56.setText(jLabel56.getText().replaceAll("<SEL>",""));
                 
                     }
                  
                     
                     
                 }
                 
             }
             if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[4][0]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
            break;
            
            case "Right1": if(state.equals("posinit")){}
         
          if(state.equals("rte")){
              
              if(Arrays.asList(temp=accessLogic.getAirports()).contains(text)==true){
             
             
             
             panelSelector.writeProperty("dest", text);jTextField1.setText("");
             }else{
                 jTextField1.setText("Entry Invalid - Airport Not Found");
             }
          
          
          }
          
          
          
            if(state.equals("index")){panelSelector.writeProperty("panelstate", "navdata");}
            if(state.equals("perfinit")){panelSelector.writeProperty("crzalt", text);jTextField1.setText("");}
            
            if(state.equals("rtepagedep1")||state.equals("transselect")){
                 
                if(runwaySelected==null){
             runwaySelected=jLabel62.getText();
             panelSelector.writeProperty("runwaydep",jLabel62.getText());
             jLabel62.setText("<SEL> "+runwaySelected);
                sidAndRunwayDisplayer();
                }else if(runwaySelected!=null){
                  panelSelector.writeProperty("runwaydep","----");
                 runwaySelected=null;   
                 sidAndRunwayDisplayer();
                }
            }
             if(state.equals("deparr")){
                 panelSelector.writeProperty("panelstate", "stardep");
             displayStarsandRunways();
             
         }
            break;
            case "Right2": if(state.equals("posinit")){}
          if(state.equals("rte")){panelSelector.writeProperty("fltno", text);jTextField1.setText("");}
            if(state.equals("index")){}
            if(state.equals("perfinit")){panelSelector.writeProperty("costindex", text);jTextField1.setText("");}
            if(state.equals("rtepagedep1")||state.equals("transselect")){
                if(runwaySelected==null){
             runwaySelected=jLabel64.getText();
              panelSelector.writeProperty("runwaydep",jLabel64.getText());
             jLabel64.setText("<SEL> "+runwaySelected);
                sidAndRunwayDisplayer();
                }
                else if(runwaySelected!=null){
                 runwaySelected=null;   
                 sidAndRunwayDisplayer();
                }
  
            }
            if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[1][1]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
          displayRTE(); 
         }
            break;
             case "Right3": if(state.equals("posinit")){}
          if(state.equals("rte")){panelSelector.writeProperty("coroute", "Not Implemented Yet");}
            if(state.equals("index")){}
            if(state.equals("perfinit")){}
            if(state.equals("rtepagedep1")||state.equals("transselect")){
                if(runwaySelected==null){
             runwaySelected=jLabel66.getText();
              panelSelector.writeProperty("runwaydep",jLabel66.getText());
             jLabel66.setText("<SEL> "+runwaySelected);
                sidAndRunwayDisplayer();
                }
               else if(runwaySelected!=null){
                 runwaySelected=null;   
                 sidAndRunwayDisplayer();
                }
            }
            
             if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[2][1]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
            break;
            
            case "Right4": if(state.equals("posinit")){}
          if(state.equals("rte")){}
            if(state.equals("index")){}
            if(state.equals("perfinit")){panelSelector.writeProperty("crzcg", text);jTextField1.setText("");}
            if(state.equals("rtepagedep1")||state.equals("transselect")){
                if(runwaySelected==null){
             runwaySelected=jLabel68.getText();
              panelSelector.writeProperty("runwaydep",jLabel68.getText());
             jLabel68.setText("<SEL> "+runwaySelected);
                sidAndRunwayDisplayer();
                }
              else  if(runwaySelected!=null){
                 runwaySelected=null;   
                 
                 sidAndRunwayDisplayer();
                }
            }
             if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[3][1]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
           displayRTE();
         }
            break;
            case "Right5": if(state.equals("posinit")){panelSelector.writeProperty("irspos", text);jTextField1.setText("");}
          if(state.equals("rte")){}
            if(state.equals("index")){}
            if(state.equals("rtepagedep1")||state.equals("transselect")){
                if(runwaySelected==null){
             runwaySelected=jLabel70.getText();
              panelSelector.writeProperty("runwaydep",jLabel70.getText());
             jLabel70.setText("<SEL> "+runwaySelected);
                sidAndRunwayDisplayer();
                }
               else if(runwaySelected!=null){
                 runwaySelected=null;   
                 sidAndRunwayDisplayer();
                }
            }
            
             if(state.equals("rtepage2")){
          temp1=rtePagesStore.get(activeRtePage);
          temp1[4][1]=jTextField1.getText();
          rtePagesStore.replace(activeRtePage,temp1);
          if(temp1[4][1].equals("----")||temp1[4][1].equals("")||temp1[4][1].equals(null)==false){
            String[][]temp2=new String[5][2];
            temp2[0][0]="----";
            temp2[0][1]="----";
          rtePagesStore.putIfAbsent(activeRtePage+1,temp2);
          
          rtePages=rtePagesStore.size();
          
          }
           displayRTE();
         }
            
            
           
              
              
            
            
            break;
        }
        
        
    }
}


    
    private void jLabel12MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"0");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel12MousePressed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+".");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel11MousePressed

    private void jLabel10MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"9");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel10MousePressed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"8");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel9MousePressed

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"7");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MousePressed

    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"6");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MousePressed

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"5");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"4");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MousePressed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"2");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"1");
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        String currentText=jTextField1.getText();
        jTextField1.setText(currentText+"3");        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MousePressed

    private void LSKR6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR6MousePressed
       if(jLabel57.getText().equals("POS INIT >")){
         panelSelector.writePanelState("posinit");  
           
       }
       
         if(jLabel57.getText().equals("RTE >")){
         panelSelector.writePanelState("rte");  
           
       }

        // TODO add your handling code here:
    }//GEN-LAST:event_LSKR6MousePressed

    private void LSKL6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL6MousePressed
if(jLabel60.getText().equals("< INDEX")){
         panelSelector.writePanelState("index");  
           
       }
       
             
        

// TODO add your handling code here:
    }//GEN-LAST:event_LSKL6MousePressed

    private void rte1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rte1MousePressed
panelSelector.writeProperty("panelstate","rte");

        // TODO add your handling code here:
    }//GEN-LAST:event_rte1MousePressed

    private void LSKL1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL1MousePressed
    performAction("Left1",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));

        // TODO add your handling code here:
    }//GEN-LAST:event_LSKL1MousePressed

    private void LSKL2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL2MousePressed
    performAction("Left2",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));       
    // TODO add your handling code here:
    }//GEN-LAST:event_LSKL2MousePressed

    private void LSKL3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL3MousePressed
 performAction("Left3",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));  
 

// TODO add your handling code here:
    }//GEN-LAST:event_LSKL3MousePressed

    private void LSKL4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL4MousePressed
 performAction("Left4",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));        // TODO add your handling code here:
    }//GEN-LAST:event_LSKL4MousePressed

    private void LSKL5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKL5MousePressed
 performAction("Left5",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));        // TODO add your handling code here:
    }//GEN-LAST:event_LSKL5MousePressed

    private void LSKR1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR1MousePressed
 performAction("Right1",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));        // TODO add your handling code here:
    }//GEN-LAST:event_LSKR1MousePressed

    private void LSKR2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR2MousePressed
 performAction("Right2",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));        // TODO add your handling code here:
    }//GEN-LAST:event_LSKR2MousePressed

    private void LSKR3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR3MousePressed
 performAction("Right3",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));         // TODO add your handling code here:
    }//GEN-LAST:event_LSKR3MousePressed

    private void LSKR4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR4MousePressed
 performAction("Right4",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));         // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_LSKR4MousePressed

    private void LSKR5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSKR5MousePressed
 performAction("Right5",jTextField1.getText(),panelSelector.retrieveProperty("panelstate"));         // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_LSKR5MousePressed

    private void prevpageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevpageMousePressed
if(panelSelector.retrieveProperty("panelstate").equals("posinit")){
    panelSelector.writeProperty("panelstate", "posinit");
    
}
if(panelSelector.retrieveProperty("panelstate").equals("posref")){
 panelSelector.writeProperty("panelstate", "posinit");   
    
}
if(panelSelector.retrieveProperty("panelstate").equals("rtepagedep1")||panelSelector.retrieveProperty("panelstate").equals("transselect")){
    listing-=5;
    listrun-=5;
    sidAndRunwayDisplayer();
    
}
if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
 listStarDep-=5;
 displayStarsandRunways();
}
if(panelSelector.retrieveProperty("panelstate").equals("legspage")){
    legsDisplay-=5;   
    displayLegs();
}

if(panelSelector.retrieveProperty("panelstate").equals("rtepage2")){
  //TODO: ADD NEXT PAGE IMPLEMENTATION HERE.
  if(activeRtePage==1){
   panelSelector.writeProperty("panelstate","rte");
  }else{
  activeRtePage--;
  displayRTE();
  }
  if(activeRtePage<=0){
   activeRtePage=1; 
  }
  
  
  
}

        // TODO add your handling code here:
    }//GEN-LAST:event_prevpageMousePressed

    private void nextpageMousePressed(java.awt.event.MouseEvent evt) {
if(panelSelector.retrieveProperty("panelstate").equals("posinit")){
    panelSelector.writeProperty("panelstate", "posref");
    
}
if(panelSelector.retrieveProperty("panelstate").equals("rtepagedep1")||panelSelector.retrieveProperty("panelstate").equals("transselect")){
    listing+=5;
    listrun+=5;
    sidAndRunwayDisplayer();
    
}
if(panelSelector.retrieveProperty("panelstate").equals("stardep")){
 listStarDep+=5;
 displayStarsandRunways();
}
if(panelSelector.retrieveProperty("panelstate").equals("legspage")){
 legsDisplay+=5;   
    displayLegs();
    
}
        
if(panelSelector.retrieveProperty("panelstate").equals("rte")){
  displayRTE(); 
}else if(panelSelector.retrieveProperty("panelstate").equals("rtepage2")){
  //TODO: ADD NEXT PAGE IMPLEMENTATION HERE.
  activeRtePage++;
  if(activeRtePage>=rtePages){
   activeRtePage=rtePages; 
  }
  displayRTE();
  
}

    }

    private void deparr1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deparr1MousePressed
    
        if(panelSelector.retrieveProperty("origin").equals("----")==false  &&panelSelector.retrieveProperty("dest").equals("----")==false){
        panelSelector.writePanelState("deparr");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_deparr1MousePressed

    private void legs1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_legs1MousePressed
        // TODO add your handling code here:
        
        displayLegs();
        
        
    }//GEN-LAST:event_legs1MousePressed

    private void InitRefMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InitRefMousePressed
        // TODO add your handling code here:
        panelSelector.writeProperty("panelstate","posinit");
    }//GEN-LAST:event_InitRefMousePressed
    
    public void getATS(){
      Thread ats=new Thread(() ->{
        
        try(FileInputStream fis=new FileInputStream(System.getProperty("user.dir")+"/navdata/navdata/airwaysFinal.ser"); ObjectInputStream ois=new ObjectInputStream(fis)){
          
          airwaysList=(LinkedHashMap)ois.readObject();
          ois.close();
          fis.close();
          
        }catch(IOException e){e.printStackTrace();}
        catch(ClassNotFoundException f){f.printStackTrace();}
        
        
      });
      
      ats.start();
    }
    
    public void getNav(){
      
      Thread ats=new Thread(() ->{
        
        try(FileInputStream fis=new FileInputStream(System.getProperty("user.dir")+"/navdata/navdata/navaids.ser"); ObjectInputStream ois=new ObjectInputStream(fis)){
          
          navaids=(LinkedListMultimap<String, Navaid>)ois.readObject();
          ois.close();
          fis.close();
      
        }catch(IOException e){e.printStackTrace();}
        catch(ClassNotFoundException f){f.printStackTrace();}
        
        
      });
      
      
      
    }
  
    
    
    private void getDataStars(){
     
      Thread pullData=new Thread(() -> {
     
          
            
            rawDataStars=accessLogic.getStars(panelSelector.retrieveProperty("origin"));
            for(int i=0;i<rawDataStars.size();i++){
               starsTransition= accessLogic.getTransition(panelSelector.retrieveProperty("origin"),rawDataStars.get(i));
              runwayAvail= accessLogic.getProcstoRunways(panelSelector.retrieveProperty("origin"),rawDataStars.get(i));
              starsDep.put(rawDataStars.get(i),new Stars(panelSelector.retrieveProperty("origin"),rawDataStars.get(i),starsTransition,runwayAvail));
            }
            
         
          
        }
        
      );
      pullData.start();
    }
    
    public void updateText(){
     
      
      
      
    }
    
    
    public void retrieveWpts(){
                               
     Thread waypoints=new Thread(() -> {
       
       try(FileInputStream fis=new FileInputStream(System.getProperty("user.dir")+"/navdata/navdata/waypoints.ser"); ObjectInputStream ois=new ObjectInputStream(fis)){
         wpts=(LinkedHashMap)ois.readObject();
         
         ois.close();
         fis.close();
       }catch(IOException e){e.printStackTrace();}
       catch(ClassNotFoundException f){f.printStackTrace();}
       
       
     });
      
      waypoints.start();
      
      rtePagesStore.put(1,new String[5][2]);
      tempDisplay=rtePagesStore.get(1);
      tempDisplay[0][0]="-----";
      tempDisplay[0][1]="-----";
      rtePagesStore.replace(1,tempDisplay);
    }
    
    /***********************
      * 
      * W.I.P METHOD TO DISPLAY AND SELECT RTE
      * 
      * ***********************/
    
   HashMap<Integer,String[][]> rtePagesStore=new HashMap<>();
    int activeRtePage=1;
    String [][]tempDisplay;
    private void displayRTE(){
      panelSelector.writeProperty("panelstate","rtepage2");
      tempDisplay=rtePagesStore.get(activeRtePage);
      try{
        jLabel51.setText("");
        jLabel52.setText(tempDisplay[0][0]);
      }catch(Exception e){e.printStackTrace(); jLabel51.setText("");
        jLabel52.setText("");}
      
       try{
        jLabel61.setText("");
        jLabel62.setText(tempDisplay[0][1]);
      }catch(Exception e){e.printStackTrace();jLabel61.setText("");
        jLabel62.setText("");}
      
       try{
        jLabel49.setText("");
        jLabel50.setText(tempDisplay[1][0]);
      }catch(Exception e){e.printStackTrace();jLabel49.setText("");
        jLabel50.setText("");}
      
       try{
        jLabel63.setText("");
        jLabel64.setText(tempDisplay[1][1]);
      }catch(Exception e){e.printStackTrace();jLabel63.setText("");
        jLabel64.setText("");}
      
       try{
        jLabel54.setText("");
        jLabel53.setText(tempDisplay[2][0]);
      }catch(Exception e){e.printStackTrace();jLabel54.setText("");
        jLabel53.setText("");}
      
       try{
        jLabel65.setText("");
        jLabel66.setText(tempDisplay[2][1]);
      }catch(Exception e){e.printStackTrace(); jLabel65.setText("");
        jLabel66.setText("");}
      
       try{
        jLabel55.setText("");
        jLabel56.setText(tempDisplay[3][0]);
      }catch(Exception e){e.printStackTrace(); jLabel55.setText("");
        jLabel56.setText("");}
      
       try{
        jLabel67.setText("");
        jLabel68.setText(tempDisplay[3][1]);
      }catch(Exception e){e.printStackTrace(); jLabel67.setText("");
        jLabel68.setText("");}
      
       try{
        jLabel58.setText("");
        jLabel59.setText(tempDisplay[4][0]);
      }catch(Exception e){e.printStackTrace();jLabel58.setText("");
        jLabel59.setText("");}
      
       try{
        jLabel69.setText("");
        jLabel70.setText(tempDisplay[4][1]);
      }catch(Exception e){e.printStackTrace();jLabel69.setText("");
        jLabel70.setText("");}
      
      
    
    }
    
    
    
  
  /***********************************
   * 
   * 
   * Method to display Stars and Runways (W.I.P)
   */
  
  public void displayStarsandRunways(){
   
      
    
    

    

    /*if(starsTransition==null||starsTransition.isEmpty()||runwayAvail==null||starsDep.isEmpty()||starsDep==null||starsDep.isEmpty()){
    for(int i=0;i<rawDataStars.size();i++){
      if(starsTransition==null||starsTransition.isEmpty()){
     starsTransition= accessLogic.getTransition(panelSelector.retrieveProperty("origin"),rawDataStars.get(i));
       
      }
      if(runwayAvail==null||starsDep.isEmpty()){
      runwayAvail= accessLogic.getProcstoRunways(panelSelector.retrieveProperty("origin"),rawDataStars.get(i));
      }
      if(starsDep==null||starsDep.isEmpty()){
     
     starsDep.put(rawDataStars.get(i),new Stars(panelSelector.retrieveProperty("origin"),rawDataStars.get(i),starsTransition,runwayAvail));
      }
   
      
    }
    }*/
      
  /* Map<String,Stars> starsArr=new LinkedHashMap<>();
    List<String> rawDataStars1=accessLogic.getStars(panelSelector.retrieveProperty("dest"));
     List<String> starsTransitionArr;
    List<String> runwayAvailArr;
      for(int i=0;i<rawDataStars1.size();i++){
    
     starsTransitionArr= accessLogic.getTransition(panelSelector.retrieveProperty("dest"),rawDataStars1.get(i));
     runwayAvailArr=accessLogic.getProcstoRunways(panelSelector.retrieveProperty("dest"),rawDataStars1.get(i));
      starsArr.put(rawDataStars1.get(i),new Stars(panelSelector.retrieveProperty("dest"),rawDataStars1.get(i),starsTransitionArr,runwayAvailArr));
      
      
    }*/
    
    
    
    
    
      if(listStarDep>=rawDataStars.size()){
       listStarDep-=5;   
      }
      if(listStarDep<=0){
       listStarDep=0; 
      }
      
      if(panelSelector.retrieveProperty("panelstate").equals("stardep")||panelSelector.retrieveProperty("panelstate").equals("transSelectDepStar")){
      if(rawDataStars.size()<=5){
          if(starSelectedDep==null){
            panelSelector.writeProperty("panelstate", "stardep");
           try{
              jLabel51.setText("");
          jLabel52.setText(rawDataStars.get(0));
          }catch(IndexOutOfBoundsException e){ jLabel51.setText(""); jLabel52.setText("");}
          
           try{
              jLabel49.setText("");
          jLabel50.setText(rawDataStars.get(1));
          }catch(IndexOutOfBoundsException e){jLabel49.setText(""); jLabel50.setText("");}
           
            try{
              jLabel54.setText("");
          jLabel53.setText(rawDataStars.get(2));
          }catch(IndexOutOfBoundsException e){jLabel54.setText(""); jLabel53.setText("");}
          
      
      try{
              jLabel55.setText("");
          jLabel56.setText(rawDataStars.get(3));
          }catch(IndexOutOfBoundsException e){jLabel55.setText(""); jLabel56.setText("");}
       try{
              jLabel58.setText("");
          jLabel59.setText(rawDataStars.get(4));
          }catch(IndexOutOfBoundsException e){jLabel58.setText(""); jLabel59.setText("");}
          }
          else if(starSelectedDep!=null){
              
              
              
               String text="";
                panelSelector.writeProperty("panelstate", "transSelectDepStar");
                if(starsDep.get(starSelectedDep).getRunways().size()<=5){
                    
                    try{
                jLabel62.setText(starsDep.get(starSelectedDep).getRunways().get(0));
                    }catch(IndexOutOfBoundsException e){jLabel62.setText("");}
                     try{
                jLabel64.setText(starsDep.get(starSelectedDep).getRunways().get(1));
                    }catch(IndexOutOfBoundsException e){jLabel64.setText("");}
                try{
                jLabel66.setText(starsDep.get(starSelectedDep).getRunways().get(2));
                    }catch(IndexOutOfBoundsException e){jLabel66.setText("");}      
                 try{
                jLabel68.setText(starsDep.get(starSelectedDep).getRunways().get(3));
                    }catch(IndexOutOfBoundsException e){jLabel68.setText("");}
                  try{
                jLabel70.setText(starsDep.get(starSelectedDep).getRunways().get(4));
                    }catch(IndexOutOfBoundsException e){jLabel70.setText("");}
     
                
                }else if(starsDep.get(starSelectedDep).getRunways().size()>5){
                    
                     try{
                jLabel62.setText(starsDep.get(starSelectedDep).getRunways().get(listRun));
                    }catch(IndexOutOfBoundsException e){jLabel62.setText("");}
                     try{
                jLabel64.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+1));
                    }catch(IndexOutOfBoundsException e){jLabel64.setText("");}
                try{
                jLabel66.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+2));
                    }catch(IndexOutOfBoundsException e){jLabel66.setText("");}      
                 try{
                jLabel68.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+3));
                    }catch(IndexOutOfBoundsException e){jLabel68.setText("");}
                  try{
                jLabel70.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+4));
                    }catch(IndexOutOfBoundsException e){jLabel70.setText("");}
                    
                    
                }
                
                
              if(starsDep.get(starSelectedDep).getTrans().size()<=4){
                 
                 
              jLabel51.setText("STAR");
           jLabel52.setText(starSelectedDep+"<SEL>");   
              jLabel49.setText("Transitions");
              try{
                  text= jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : starsDep.get(starSelectedDep).getTrans().get(0);
              jLabel50.setText(text);
              }catch(IndexOutOfBoundsException e){ jLabel50.setText("");}
              try{
                   text= jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : starsDep.get(starSelectedDep).getTrans().get(1);
               jLabel53.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel53.setText("");}
              try{
                   text= jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : starsDep.get(starSelectedDep).getTrans().get(2);
                jLabel56.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel56.setText("");}
              try{
                   text= jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : starsDep.get(starSelectedDep).getTrans().get(4);
                 jLabel59.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel59.setText("");}
              
          } else if(starsDep.get(starSelectedDep).getTrans().size()>4){
            
               jLabel51.setText("STAR");
           jLabel52.setText(starSelectedDep+"<SEL>");   
              jLabel49.setText("Transitions");
              try{
                
                   text= jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep);
              jLabel50.setText(text);
              }catch(IndexOutOfBoundsException e){ jLabel50.setText("");}
              try{
                   text= jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+1);
               jLabel53.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel53.setText("");}
              try{
                    text= jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+2);
                jLabel56.setText(starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+2));
              }catch(IndexOutOfBoundsException e){jLabel56.setText("");}
              try{
                   text= jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+3);
                 jLabel59.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel59.setText("");}
          }
          }
          
       
       
       
          
      }
      else if(rawDataStars.size()>5){
          if(starSelectedDep==null){
            jLabel62.setText("");
            jLabel64.setText("");
            jLabel66.setText("");
            jLabel68.setText("");
            jLabel70.setText("");
            
              panelSelector.writeProperty("panelstate", "stardep");
           try{
              jLabel51.setText("");
          jLabel52.setText(rawDataStars.get(listStarDep));
          }catch(IndexOutOfBoundsException e){ jLabel51.setText(""); jLabel52.setText("");}
          
           try{
              jLabel49.setText("");
          jLabel50.setText(rawDataStars.get(listStarDep+1));
          }catch(IndexOutOfBoundsException e){jLabel49.setText(""); jLabel50.setText("");}
           
            try{
              jLabel54.setText("");
          jLabel53.setText(rawDataStars.get(listStarDep+2));
          }catch(IndexOutOfBoundsException e){jLabel54.setText(""); jLabel53.setText("");}
          
      
      try{
              jLabel55.setText("");
          jLabel56.setText(rawDataStars.get(listStarDep+3));
          }catch(IndexOutOfBoundsException e){jLabel55.setText(""); jLabel56.setText("");}
       try{
              jLabel58.setText("");
          jLabel59.setText(rawDataStars.get(listStarDep+4));
          }catch(IndexOutOfBoundsException e){jLabel58.setText(""); jLabel59.setText("");}
          }
          else if(starSelectedDep!=null){
              
              
              
               String text="";
                panelSelector.writeProperty("panelstate", "transSelectDepStar");
                
                 if(starsDep.get(starSelectedDep).getRunways().size()<=5){
                    System.out.println(starsDep.get(starSelectedDep).getRunways());
                    try{
                jLabel62.setText(starsDep.get(starSelectedDep).getRunways().get(0));
                    }catch(IndexOutOfBoundsException e){jLabel62.setText("");}
                     try{
                jLabel64.setText(starsDep.get(starSelectedDep).getRunways().get(1));
                    }catch(IndexOutOfBoundsException e){jLabel64.setText("");}
                try{
                jLabel66.setText(starsDep.get(starSelectedDep).getRunways().get(2));
                    }catch(IndexOutOfBoundsException e){jLabel66.setText("");}      
                 try{
                jLabel68.setText(starsDep.get(starSelectedDep).getRunways().get(3));
                    }catch(IndexOutOfBoundsException e){jLabel68.setText("");}
                  try{
                jLabel70.setText(starsDep.get(starSelectedDep).getRunways().get(4));
                    }catch(IndexOutOfBoundsException e){jLabel70.setText("");}
     
                
                }else if(starsDep.get(starSelectedDep).getRunways().size()>5){
                    
                     try{
                jLabel62.setText(starsDep.get(starSelectedDep).getRunways().get(listRun));
                    }catch(IndexOutOfBoundsException e){jLabel62.setText("");}
                     try{
                jLabel64.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+1));
                    }catch(IndexOutOfBoundsException e){jLabel64.setText("");}
                try{
                jLabel66.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+2));
                    }catch(IndexOutOfBoundsException e){jLabel66.setText("");}      
                 try{
                jLabel68.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+3));
                    }catch(IndexOutOfBoundsException e){jLabel68.setText("");}
                  try{
                jLabel70.setText(starsDep.get(starSelectedDep).getRunways().get(listRun+4));
                    }catch(IndexOutOfBoundsException e){jLabel70.setText("");}
                    
                    
                }
                
                
              if(starsDep.get(starSelectedDep).getTrans().size()<=4){
                 
                 
              jLabel51.setText("STAR");
           jLabel52.setText(starSelectedDep+"<SEL>");   
              jLabel49.setText("Transitions");
              try{
                  text= jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : starsDep.get(starSelectedDep).getTrans().get(0);
              jLabel50.setText(text);
              }catch(IndexOutOfBoundsException e){ jLabel50.setText("");}
              try{
                   text= jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : starsDep.get(starSelectedDep).getTrans().get(1);
               jLabel53.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel53.setText("");}
              try{
                   text= jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : starsDep.get(starSelectedDep).getTrans().get(2);
                jLabel56.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel56.setText("");}
              try{
                   text= jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : starsDep.get(starSelectedDep).getTrans().get(4);
                 jLabel59.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel59.setText("");}
              
          } else if(starsDep.get(starSelectedDep).getTrans().size()>4){
              panelSelector.writeProperty("panelstate", "transSelectDepStar");
               jLabel51.setText("STAR");
           jLabel52.setText(starSelectedDep+"<SEL>");   
              jLabel49.setText("Transitions");
              try{
                
                   text= jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep);
              jLabel50.setText(text);
              }catch(IndexOutOfBoundsException e){ jLabel50.setText("");}
              try{
                   text= jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+1);
               jLabel53.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel53.setText("");}
              try{
                    text= jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+2);
                jLabel56.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel56.setText("");}
              try{
                   text= jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : starsDep.get(starSelectedDep).getTrans().get(listTransStarDep+3);
                 jLabel59.setText(text);
              }catch(IndexOutOfBoundsException e){jLabel59.setText("");}
          }
          }
          
      }
      }else if(panelSelector.retrieveProperty("panelstate").equals("stararr")){
      
      
      }
      
     //  double timeCheck1=System.nanoTime();
     //  System.out.println((timeCheck1-timeCheck)/1000000);
  }
  
/////////////////////////////////////////////////////////////////////////////////////////
  
  
  /*************
   * 
   * METHOD TO DISPLAY LEGS
   * 
   */
  
  
   public void displayLegs(){
       Map<String,legs> legsData=new HashMap<>();
     if(sidSelected!=null){
         panelSelector.writeProperty("panelstate", "legspage");
   

    List<String> rawDataSID=navDataPull.getSIDWpt(panelSelector.retrieveProperty("origin"),sidSelected,runwaySelected,TransSelected);
    List<String> rawDataSIDLatLong=navDataPull.getSIDWptLatLong(panelSelector.retrieveProperty("origin"),sidSelected,runwaySelected,TransSelected);
    List<String> distanceFromWPT=new ArrayList<>();
    List<String> bearingFromWPT=new ArrayList<>();
    if(legsDisplay>rawDataSID.size()){
     legsDisplay-=5; 
    }
    
    List<String> altRestrictions=new LinkedList<>();
    try{
     altRestrictions=navDataPull.getAltRest(panelSelector.retrieveProperty("origin"),sidSelected,TransSelected); 
    }catch(IOException e){}
    
  //  for(int i=0;i<altRestrictions.size();i++){
  //   System.out.println(altRestrictions.get(i)); 
  //  }
    
    //System.out.println(rawDataSIDLatLong);
   

    for(int i=0;i<rawDataSIDLatLong.size()-2;i+=2){

        Double lat1=Double.parseDouble(rawDataSIDLatLong.get(i));
        Double lon1=Double.parseDouble(rawDataSIDLatLong.get(i+1));
        Double lat2=Double.parseDouble(rawDataSIDLatLong.get(i+2));
        Double lon2=0D;
        
        lon2=Double.parseDouble(rawDataSIDLatLong.get(i+3));
        
       navDataPull.distanceNM(lat1,lon1,lat2,lon2);
        distanceFromWPT.add(Double.toString(navDataPull.distanceNM(lat1,lon1,lat2,lon2)));

        bearingFromWPT.add(Double.toString(navDataPull.calcBearing(lat1,lon1,lat2,lon2)));


    }

    
  String []  runwayData=navDataPull.runwayData(panelSelector.retrieveProperty("origin"),runwaySelected).split(",");

 bearingFromWPT.add(0,runwayData[2]);
    
    
//     System.out.println("DFWPT: "+distanceFromWPT);
//     System.out.println("ALL HGS: "+bearingFromWPT);
    int latlongselect=0;
  // System.out.println(distanceFromWPT.size()-1  +"  "+ bearingFromWPT.size() );
    int latlong=0;
    int latlongBearing=0;
    int altrest=0;
    for(int i=0; i<rawDataSID.size();i++){
      
        String distanceFromLast="0 NM";
        String bearingFromLast="N/A";
        String altRestr="----";
         if(i>0&&i< bearingFromWPT.size()+3&&!(rawDataSID.get(i).charAt(0)=='('||rawDataSID.get(i).contains("VECTORS")==true)){
          
            bearingFromLast=bearingFromWPT.get(latlongBearing);
            distanceFromLast=distanceFromWPT.get(latlong);
           
//            System.out.println("Distance :" +distanceFromLast);
//            System.out.println("HDG :"+bearingFromLast);
latlong++;
latlongBearing++;


         }else if(rawDataSID.get(i).contains("RW"+runwaySelected)){
           bearingFromLast=bearingFromWPT.get(0);
           latlongBearing++;
         }
          if(i>0&&i<altRestrictions.size()+3){
            altRestr=altRestrictions.get(altrest);
            altrest++;
         }
         if(rawDataSID.get(i).charAt(0)=='('||rawDataSID.get(i).contains("VECTORS")==true){
           legsData.put(rawDataSID.get(i),new legs(rawDataSID.get(i),rawDataSIDLatLong.get(latlongselect),rawDataSIDLatLong.get(latlongselect+1),"0 NM",bearingFromLast,altRestr) );
         }else{
        legsData.put(rawDataSID.get(i),new legs(rawDataSID.get(i),rawDataSIDLatLong.get(latlongselect),rawDataSIDLatLong.get(latlongselect+1),distanceFromLast,bearingFromLast,altRestr) );
    }
        
        if(latlongselect!=rawDataSIDLatLong.size()-2){
        latlongselect+=2;
        }

    } 
//   for(int i=0; i<legsData.size();i++){
//   System.out.println(legsData.get(rawDataSID.get(i)).getLegName()+": Latitude: " +legsData.get(rawDataSID.get(i)).getLatitude()+" ,Longitude: "+ legsData.get(rawDataSID.get(i)).getLongitude() +" ,Distance from last:"+ legsData.get(rawDataSID.get(i)).getDistanceFromLast()+" ,Bearing From Last:"+legsData.get(rawDataSID.get(i)).getBearingFromLast() +
//   " ALTITUDE RESTRICTION: "+legsData.get(rawDataSID.get(i)).getaltRestr());
//   
//   }
 
    if(rawDataSID.size()<=5){
       jLabel48.setText("ACT 1 RTE LEGS");
      
       double distSelect=0D;
       jLabel48.setText("ACT 1 RTE LEGS");
       String altSelect="";
       
       double hdgSelect=0;
        try{
            
            jLabel52.setText(legsData.get(rawDataSID.get(0)).getLegName());
            if(legsData.get(rawDataSID.get(0))!=null){
                altSelect=legsData.get(rawDataSID.get(0)).getaltRestr();
                if(legsData.get(rawDataSID.get(0)).getDistanceFromLast().equals("0 NM")==false){
                distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));
                jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
          jLabel51.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel61.setText(Double.toString(distSelect)+" NM");
           jLabel62.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel51.setText("");
            jLabel52.setText("");
            jLabel61.setText("");
            jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel62.setText("");
                    
        }
        
          try{
           
            jLabel50.setText(legsData.get(rawDataSID.get(1)).getLegName());
            if(legsData.get(rawDataSID.get(1))!=null){
                altSelect=legsData.get(rawDataSID.get(1)).getaltRestr();
                if(legsData.get(rawDataSID.get(1)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(1)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(1)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel49.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel63.setText(Double.toString(distSelect)+" NM");
           jLabel64.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel49.setText("");
            jLabel50.setText("");
            jLabel63.setText("");
            jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel64.setText("");
                    
        }
          
          
            try{
          //  jLabel54.setText(legsData.get(rawDataSID.get(legsDisplay+2)).getBearingFromLast());
            jLabel53.setText(legsData.get(rawDataSID.get(2)).getLegName());
            if(legsData.get(rawDataSID.get(2))!=null){
                altSelect=legsData.get(rawDataSID.get(2)).getaltRestr();
                if(legsData.get(rawDataSID.get(2)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(2)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(2)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel54.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel65.setText(Double.toString(distSelect)+" NM");
           jLabel66.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel54.setText("");
            jLabel53.setText("");
            jLabel65.setText("");
            jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel66.setText("");
                    
        }
        
          try{
          //  jLabel55.setText(legsData.get(rawDataSID.get(legsDisplay+3)).getBearingFromLast());
            jLabel56.setText(legsData.get(rawDataSID.get(3)).getLegName());
            if(legsData.get(rawDataSID.get(3))!=null){
                altSelect=legsData.get(rawDataSID.get(3)).getaltRestr();
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(3)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                 if(legsData.get(rawDataSID.get(3)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(3)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                
                jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel55.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel67.setText(Double.toString(distSelect)+" NM");
           jLabel68.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel55.setText("");
            jLabel56.setText("");
            jLabel67.setText("");
            jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel68.setText("");
                    
        }
          
          
            try{
      //      jLabel58.setText(legsData.get(rawDataSID.get(legsDisplay+4)).getBearingFromLast());
            jLabel59.setText(legsData.get(rawDataSID.get(4)).getLegName());
            if(legsData.get(rawDataSID.get(4))!=null){
                altSelect=legsData.get(rawDataSID.get(4)).getaltRestr();
                 if(legsData.get(rawDataSID.get(4)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(4)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(4)).getBearingFromLast()));
                jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel58.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel69.setText(Double.toString(distSelect)+" NM");
           jLabel70.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel58.setText("");
            jLabel59.setText("");
            jLabel69.setText("");
            jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel70.setText("");
                    
        }
        
        
            
        
    } else if(rawDataSID.size()>5){
     
       jLabel48.setText("ACT 1 RTE LEGS");
       String altSelect="";
       double distSelect=0D;
       double hdgSelect=0;
        try{
            
            jLabel52.setText(legsData.get(rawDataSID.get(legsDisplay)).getLegName());
            if(legsData.get(rawDataSID.get(legsDisplay))!=null){
                altSelect=legsData.get(rawDataSID.get(legsDisplay)).getaltRestr();
                if(legsData.get(rawDataSID.get(legsDisplay)).getDistanceFromLast().equals("0 NM")==false){
                distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay)).getBearingFromLast()));
                jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
          jLabel51.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel61.setText(Double.toString(distSelect)+" NM");
           jLabel62.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel51.setText("");
            jLabel52.setText("");
            jLabel61.setText("");
            jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel62.setText("");
                    
        }
        
          try{
           
            jLabel50.setText(legsData.get(rawDataSID.get(legsDisplay+1)).getLegName());
            if(legsData.get(rawDataSID.get(legsDisplay+1))!=null){
                altSelect=legsData.get(rawDataSID.get(legsDisplay+1)).getaltRestr();
                if(legsData.get(rawDataSID.get(legsDisplay+1)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+1)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+1)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel49.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel63.setText(Double.toString(distSelect)+" NM");
           jLabel64.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel49.setText("");
            jLabel50.setText("");
            jLabel63.setText("");
            jLabel63.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel64.setText("");
                    
        }
          
          
            try{
          //  jLabel54.setText(legsData.get(rawDataSID.get(legsDisplay+2)).getBearingFromLast());
            jLabel53.setText(legsData.get(rawDataSID.get(legsDisplay+2)).getLegName());
            if(legsData.get(rawDataSID.get(legsDisplay+2))!=null){
                altSelect=legsData.get(rawDataSID.get(legsDisplay+2)).getaltRestr();
                if(legsData.get(rawDataSID.get(legsDisplay+2)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+2)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+2)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel54.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel65.setText(Double.toString(distSelect)+" NM");
           jLabel66.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel54.setText("");
            jLabel53.setText("");
            jLabel65.setText("");
            jLabel65.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel66.setText("");
                    
        }
        
          try{
          //  jLabel55.setText(legsData.get(rawDataSID.get(legsDisplay+3)).getBearingFromLast());
            jLabel56.setText(legsData.get(rawDataSID.get(legsDisplay+3)).getLegName());
            if(legsData.get(rawDataSID.get(legsDisplay+3))!=null){
                altSelect=legsData.get(rawDataSID.get(legsDisplay+3)).getaltRestr();
                try{
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+3)).getBearingFromLast()));
                }catch(NumberFormatException e){hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(0)).getBearingFromLast()));}
                 if(legsData.get(rawDataSID.get(legsDisplay+3)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+3)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                
                jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel55.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel67.setText(Double.toString(distSelect)+" NM");
           jLabel68.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel55.setText("");
            jLabel56.setText("");
            jLabel67.setText("");
            jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel68.setText("");
                    
        }
          
          
            try{
      //      jLabel58.setText(legsData.get(rawDataSID.get(legsDisplay+4)).getBearingFromLast());
            jLabel59.setText(legsData.get(rawDataSID.get(legsDisplay+4)).getLegName());
            if(legsData.get(rawDataSID.get(legsDisplay+4))!=null){
                altSelect=legsData.get(rawDataSID.get(legsDisplay+4)).getaltRestr();
                 if(legsData.get(rawDataSID.get(legsDisplay+4)).getDistanceFromLast().equals("0 NM")==false){
               distSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+4)).getDistanceFromLast()));
                }else{
                 distSelect=0; 
                }
                
                hdgSelect=Math.round(Double.parseDouble(legsData.get(rawDataSID.get(legsDisplay+4)).getBearingFromLast()));
                jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            }
            jLabel58.setText(Double.toString(hdgSelect)+"\u00b0");
           jLabel69.setText(Double.toString(distSelect)+" NM");
           jLabel70.setText("----/"+altSelect);
            
            
        }catch(IndexOutOfBoundsException e){
            jLabel58.setText("");
            jLabel59.setText("");
            jLabel69.setText("");
            jLabel69.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel70.setText("");
                    
        }
        
        
            
        
     
      
      
    }


     }
  }

    String [] location; //= getLocation.getLatLongIP();
    int x=0;
    
    
    
    /************************
     * 
     * METHOD TO DISPLAY SIDS AND RUNWAYS PAGE STATES INCLUDE : rtedeppage1 && transselect
     * 
     */
    
    
    
    public void getSidData(){
      Thread sidPull=new Thread(() -> {
      
           sids = accessLogic.getSIDS(panelSelector.retrieveProperty("origin"));
           for(int i=0;i<sids.size();i++){
             runways = accessLogic.getProcstoRunways(panelSelector.retrieveProperty("origin"),sids.get(i));
             Transitions= accessLogic.getTransition(panelSelector.retrieveProperty("origin"),sids.get(i));
             sidsDep.put(sids.get(i),new Sids(sids.get(i),panelSelector.retrieveProperty("origin"),runways,Transitions));

        }
 System.out.println(sidsDep);
      });
      sidPull.start();
    
     
    }
    
    

     
    public void sidAndRunwayDisplayer() {
      
      runwaySelected=(panelSelector.retrieveProperty("runwaydep").equals("----")) ? null : panelSelector.retrieveProperty("runwaydep");

        if (listing <= 0) {
            listing = 0;
        }

        if (listrun <= 0) {
            listrun = 0;
        }
      /*  if (runwaySelected == null || runwaySelected == "") {
            sids = accessLogic.getSIDS(panelSelector.retrieveProperty("origin"));
        } else if (runwaySelected != null || runwaySelected != "") {
            sids = accessLogic.getRunwaystoSids(panelSelector.retrieveProperty("origin"), runwaySelected);
        }
        runways = Arrays.asList(accessLogic.getRunways(panelSelector.retrieveProperty("origin")));
       
      
        if (sidSelected != null) {


            Transitions = accessLogic.getTransition(panelSelector.retrieveProperty("origin"), sidSelected);
        }*/
        /*if (sidSelected != null) {
            for (String next : Transitions) {
                System.out.println(Transitions);
            }
        }*/
       /* int sidsPage = (int) (sids.size() / 5.0);
        int runwaysPage = (int) (runways.size() / 5.0);
        int maxPage = 0;
        if (sidsPage > runwaysPage) {
            maxPage = sidsPage;
        } else if (runwaysPage > sidsPage) {
            maxPage = runwaysPage;
        }*/
        if (listing > sids.size()) {
            listing -= 5;
        }
        if(sidSelected!=null){
        if (listrun > sidsDep.get(sidSelected).getRunways().size()) {
            listrun -= 5;
        }
        }
     

        if (sids.size() <= 5) {

            if (sidSelected == null) {
              runwaySelected=null;
                panelSelector.writeProperty("panelstate", "rtepagedep1");
                 jLabel62.setText("");
                     jLabel64.setText("");
                     jLabel66.setText("");
                     jLabel68.setText("");
                     jLabel70.setText("");
                jLabel48.setText("DEPARTURES");
                jLabel51.setText("");
                try{
                jLabel52.setText(sidsDep.get(sids.get(0)).getSidIdent());
                } catch(Exception e){}
                
                jLabel49.setText("");
                try{
                jLabel50.setText(sidsDep.get(sids.get(1)).getSidIdent());
                }catch(Exception e){}
                jLabel54.setText("");
                try{
                jLabel53.setText(sidsDep.get(sids.get(2)).getSidIdent());
                }catch (Exception e){}
                jLabel55.setText("");
                try{
                jLabel56.setText(sidsDep.get(sids.get(3)).getSidIdent());
                }catch (Exception e){}
                jLabel58.setText("");
                try{
                jLabel59.setText(sidsDep.get(sids.get(4)).getSidIdent());
                }catch(Exception e){}
//                jLabel61.setText("");
//                jLabel62.setText("");
//                jLabel63.setText("");
//                jLabel64.setText("");
//                jLabel65.setText("");
//                jLabel66.setText("");
//                jLabel67.setText("");
//                jLabel68.setText("");
//                jLabel69.setText("");
//                jLabel70.setText("");
                jLabel57.setText("");
            } else if (sidSelected != null) {

              
              
               
                    panelSelector.writeProperty("panelstate", "transselect");
                    
                    
                    if(runwaySelected==null){
                      try{
                       jLabel62.setText(sidsDep.get(sidSelected).getRunways().get(listrun)); 
                      }catch(Exception e){}
                       
                       try{
                          jLabel64.setText(sidsDep.get(sidSelected).getRunways().get(listrun+1)); 
                       }catch(Exception e){}
                       try{
                        jLabel66.setText(sidsDep.get(sidSelected).getRunways().get(listrun+2));
                       }catch (Exception e){}
                       
                       try{
                   jLabel68.setText(sidsDep.get(sidSelected).getRunways().get(listrun+3));
                       }catch(Exception e){}
                       
                       try{
                         jLabel70.setText(sidsDep.get(sidSelected).getRunways().get(listrun+4));
                       }catch(Exception e){}
                    }else{
                     jLabel62.setText("<SEL>"+runwaySelected);
                     jLabel64.setText("");
                     jLabel66.setText("");
                     jLabel68.setText("");
                     jLabel70.setText("");
                    }
                    
                    
                    if (Transitions.size() <= 4) {
                        jLabel52.setText(sidSelected + "<SEL>");
                        try {
                            String text = jLabel50.getText().contains("<SEL>") ? jLabel50.getText() :sidsDep.get(sidSelected).getTransitions().get(0);
                            jLabel50.setText(text);
                        } catch (Exception e) {
                            jLabel50.setText("");
                        }
                        try {
                            String text = jLabel53.getText().contains("<SEL>") ? jLabel53.getText() :sidsDep.get(sidSelected).getTransitions().get(1);
                            jLabel53.setText(text);
                        } catch (Exception e) {
                            jLabel53.setText("");
                        }
                        try {
                            String text = jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : sidsDep.get(sidSelected).getTransitions().get(2);
                            jLabel56.setText(text);


                        } catch (Exception e) {
                            jLabel56.setText("");
                        }
                        try {
                            String text = jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : sidsDep.get(sidSelected).getTransitions().get(3);
                            jLabel59.setText(text);


                        } catch (Exception e) {
                            jLabel59.setText("");
                        }
                    }
                    if (Transitions.size() > 4) {
                        jLabel52.setText(sidSelected + "<SEL>");
                        panelSelector.writeProperty("panelstate", "transselect");
                        try {
                            String text = jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : sidsDep.get(sidSelected).getTransitions().get(listtrans);
                            jLabel50.setText(text);
                        } catch (Exception e) {
                            jLabel50.setText("");
                        }
                        try {
                            String text = jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : sidsDep.get(sidSelected).getTransitions().get(listtrans+1);
                            jLabel53.setText(text);
                        } catch (Exception e) {
                            jLabel53.setText("");
                        }
                        try {
                            String text = jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : sidsDep.get(sidSelected).getTransitions().get(listtrans+2);
                            jLabel56.setText(text);


                        } catch (Exception e) {
                            jLabel56.setText("");
                        }
                        try {
                            String text = jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : sidsDep.get(sidSelected).getTransitions().get(listtrans+3);
                            jLabel59.setText(text);


                        } catch (Exception e) {
                            jLabel59.setText("");
                        }
                    }
                

            }

        }
        if (sids.size() > 5) {
          if(sidSelected==null){
           runwaySelected=null; 
          }
            panelSelector.writeProperty("panelstate", "rtepagedep1");
                     jLabel62.setText("");
                     jLabel64.setText("");
                     jLabel66.setText("");
                     jLabel68.setText("");
                     jLabel70.setText("");
            try {
                jLabel52.setText(sids.get(listing));
            } catch (Exception ex) {
                jLabel52.setText("");
             //   System.out.println("NO SID HERE");
            }
            try {
                jLabel49.setText("");
                jLabel50.setText(sids.get(listing + 1));
            } catch (Exception e) {
                jLabel50.setText("");
             //   System.out.println("NO SID HERE");
            }
            try {
                jLabel54.setText("");
                jLabel53.setText(sids.get(listing + 2));
            } catch (Exception e) {
                jLabel53.setText("");
             //   System.out.println("NO SID HERE");
            }
            try {
                jLabel55.setText("");
                jLabel56.setText(sids.get(listing + 3));
            } catch (Exception e) {
                jLabel56.setText("");
             //   System.out.println("NO SID HERE");
            }
            try {
                jLabel58.setText("");
                jLabel59.setText(sids.get(listing + 4));
            } catch (Exception e) {
                jLabel59.setText("");
            //    System.out.println("NO SID HERE");
            }
            if (sidSelected != null) {
              
              if(runwaySelected==null){
                  try{
                       jLabel62.setText(sidsDep.get(sidSelected).getRunways().get(listrun)); 
                      }catch(Exception e){}
                       
                       try{
                          jLabel64.setText(sidsDep.get(sidSelected).getRunways().get(listrun+1)); 
                       }catch(Exception e){}
                       try{
                        jLabel66.setText(sidsDep.get(sidSelected).getRunways().get(listrun+2));
                       }catch (Exception e){}
                       
                       try{
                   jLabel68.setText(sidsDep.get(sidSelected).getRunways().get(listrun+3));
                       }catch(Exception e){}
                       
                       try{
                         jLabel70.setText(sidsDep.get(sidSelected).getRunways().get(listrun+4));
                       }catch(Exception e){}
              }else{
                     jLabel62.setText("<SEL>"+runwaySelected);
                     jLabel64.setText("");
                     jLabel66.setText("");
                     jLabel68.setText("");
                     jLabel70.setText("");
                    }
                    
            
                if (Transitions.size() <= 4) {
                    panelSelector.writeProperty("panelstate", "transselect");
                    jLabel51.setText("SIDS");
                    jLabel52.setText(sidSelected + "<SEL>");
                    jLabel49.setText("TRANS");
                    try {
                        String text = jLabel50.getText().contains("<SEL>") ? jLabel50.getText() : sidsDep.get(sidSelected).getTransitions().get(0);
                        jLabel50.setText(text);
                    } catch (Exception e) {
                        jLabel50.setText("");
                    }
                    try {
                        String text = jLabel53.getText().contains("<SEL>") ? jLabel53.getText() : sidsDep.get(sidSelected).getTransitions().get(1);
                        jLabel53.setText(text);
                    } catch (Exception e) {
                        jLabel53.setText("");
                    }
                    try {
                        String text = jLabel56.getText().contains("<SEL>") ? jLabel56.getText() : sidsDep.get(sidSelected).getTransitions().get(2);
                        jLabel56.setText(text);


                    } catch (Exception e) {
                        jLabel56.setText("");
                    }
                    try {
                        String text = jLabel59.getText().contains("<SEL>") ? jLabel59.getText() : sidsDep.get(sidSelected).getTransitions().get(3);
                        jLabel59.setText(text);


                    } catch (Exception e) {
                        jLabel59.setText("");
                    }

                }
                if (Transitions.size() > 4) {
                    panelSelector.writeProperty("panelstate", "transselect");
                    jLabel51.setText("SIDS");
                    jLabel52.setText(sidSelected + "<SEL>");
                    jLabel49.setText("TRANS");
                    try {
                        String text = jLabel50.getText().contains("<SEL>") ? jLabel50.getText() :  sidsDep.get(sidSelected).getTransitions().get(listtrans);
                        jLabel50.setText(text);
                    } catch (Exception e) {
                        jLabel50.setText("");
                    }
                    try {
                        String text = jLabel53.getText().contains("<SEL>") ? jLabel53.getText() :  sidsDep.get(sidSelected).getTransitions().get(listtrans+1);
                        jLabel53.setText(text);
                    } catch (Exception e) {
                        jLabel53.setText("");
                    }
                    try {
                        String text = jLabel56.getText().contains("<SEL>") ? jLabel56.getText() :  sidsDep.get(sidSelected).getTransitions().get(listtrans+2);
                        jLabel56.setText(text);


                    } catch (Exception e) {
                        jLabel56.setText("");
                    }
                    try {
                        String text = jLabel59.getText().contains("<SEL>") ? jLabel59.getText() :  sidsDep.get(sidSelected).getTransitions().get(listtrans+3);
                        jLabel59.setText(text);


                    } catch (Exception e) {
                        jLabel59.setText("");
                    }
                }
            }

        }
    }
        


    



    private void getAirways(){
      Thread getATS=new Thread(() -> {
        try(FileInputStream fis=new FileInputStream(System.getProperty("user.dir")+"/airwaysFinal.ser") ; ObjectInputStream ois=new ObjectInputStream(fis)){
          airwaysList=(LinkedHashMap)ois.readObject();
          
        }catch (IOException e){e.printStackTrace();}
        catch(ClassNotFoundException f){f.printStackTrace();}
        
      });
      getATS.start();
      
    }
   
   
    
    public void panelSelector(){
    //panelstate=ident opens ident page
    //panelstate=index opens index page
    //panelstate=posinit opens POS INIT page
    //panelstate=RTE opens route page
    PropertiesChecker panel=new PropertiesChecker();
    Thread panelVerifier = new Thread(new Runnable(){
        public void run()
        {
         
         while(x==0){
           
             if(panel.retrieveProperty("panelstate").equals("ident")){
               listing=0;
                 pagenumber.setText("");
             jLabel48.setText("IDENT");
             jLabel51.setText("MODEL");
             jLabel52.setText("787-9");
             jLabel49.setText("NAVDATA");
             jLabel50.setText("NAVIGRAPH 1801");
             jLabel54.setText("");
             jLabel53.setText("");
             jLabel55.setText("OP PROGRAM");
             jLabel56.setText("OP042017");
             jLabel58.setText("");
             jLabel59.setText("");
             jLabel61.setText("ENG RATING");
             jLabel62.setText("GENX-1B64");
             jLabel63.setText("ACTIVE");
             jLabel64.setText("JAN01FEB01/18");
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("DRAG/FF");
             jLabel70.setText("+0.0/+0.0");
             jLabel57.setText("POS INIT >");
         }
             else if(panel.retrieveProperty("panelstate").equals("posinit")){
               listing=0;
                  pagenumber.setText("PAGE 1/2");
                 jLabel48.setText("POS INIT");
             jLabel51.setText("REF AIRPORT");
             jLabel52.setText(panelSelector.retrieveProperty("refairport"));
             jLabel49.setText("GATE");
             jLabel50.setText(panelSelector.retrieveProperty("gate"));
             jLabel54.setText("UTC");
             jLabel53.setText("placeholder");
             jLabel55.setText("");
             jLabel56.setText("");
             jLabel58.setText("");
             jLabel59.setText("");
             jLabel61.setText("LAST POS");
             jLabel62.setText("place holder");
             jLabel63.setText("");
             jLabel64.setText("");
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("SET INERTIAL POSITION");
             jLabel70.setText(panelSelector.retrieveProperty("irspos"));
                 jLabel57.setText("RTE >");
                 }
             
             
             else if(panel.retrieveProperty("panelstate").equals("index")){
               listing=0;
                  jLabel48.setText("INIT/REF INDEX");
             jLabel51.setText("");
             jLabel52.setText("< IDENT");
             jLabel49.setText("");
             jLabel50.setText("< POS");
             jLabel54.setText("");
             jLabel53.setText("< PERF");
             jLabel55.setText("");
             jLabel56.setText("< TAKEOFF");
             jLabel58.setText("");
             jLabel59.setText("< APPROACH");
             jLabel61.setText("");
             jLabel62.setText("NAVDATA >");
             jLabel63.setText("");
             jLabel64.setText("");
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("");
             jLabel70.setText("");
                 jLabel57.setText("");
                 
                 
             }
              else if(panel.retrieveProperty("panelstate").equals("rte")){
                listing=0;
                  jLabel48.setText("RTE 1");
             jLabel51.setText("Origin");
             jLabel52.setText(panelSelector.retrieveProperty("origin"));
             jLabel49.setText("RUNWAY");
             jLabel50.setText(panelSelector.retrieveProperty("runwaydep"));
             jLabel54.setText("");
             jLabel53.setText("");
             jLabel55.setText("");
             jLabel56.setText("");
             jLabel58.setText("");
             jLabel59.setText("");
             jLabel61.setText("DEST");
             jLabel62.setText(panelSelector.retrieveProperty("dest"));
             jLabel63.setText("FLT NO");
             jLabel64.setText(panelSelector.retrieveProperty("fltno"));
             jLabel65.setText("CO ROUTE");
             jLabel66.setText(panelSelector.retrieveProperty("coroute"));
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("");
             jLabel70.setText("ALTN >");
                 jLabel57.setText("");
                 
                 
             }
             else if(panel.retrieveProperty("panelstate").equals("perfinit")){
               listing=0;
                  jLabel48.setText("PERF INIT");
             jLabel51.setText("GR WT");
             jLabel52.setText(panelSelector.retrieveProperty("groundweight"));
             jLabel49.setText("FUEL");
             jLabel50.setText(panelSelector.retrieveProperty("fuel"));
             jLabel54.setText("ZFW");
             jLabel53.setText(panelSelector.retrieveProperty("zfw"));
             jLabel55.setText("RESERVES");
             jLabel56.setText(panelSelector.retrieveProperty("reserves"));
             jLabel58.setText("");
             jLabel59.setText("");
             jLabel61.setText("CRZ ALT");
             jLabel62.setText(panelSelector.retrieveProperty("crzalt"));
             jLabel63.setText("COST INDEX");
             jLabel64.setText(panelSelector.retrieveProperty("costindex"));
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("CRZ CG");
             jLabel68.setText(panelSelector.retrieveProperty("crzcg"));
             jLabel69.setText("");
             jLabel70.setText("");
                 jLabel57.setText("");
                 
                 
             }
             
             if(panel.retrieveProperty("panelstate").equals("posref")){
               listing=0;
                  pagenumber.setText("PAGE 2/2");
             jLabel48.setText("POS REF");
             jLabel51.setText("FMC (GPS)");
      
       
             jLabel52.setText(location[0] +" " +location [1]);
             jLabel49.setText("IRU L ");
             jLabel50.setText("INOP");
             jLabel54.setText("GPS - IRU L");
             jLabel53.setText("INOP");
             jLabel55.setText("RADIO L");
             jLabel56.setText("INOP ");
             jLabel58.setText("RNP / ACTUAL");
             jLabel59.setText("2.00 / 0.01");
             jLabel61.setText("");
             jLabel62.setText("");
             jLabel63.setText("");
             jLabel64.setText("");
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("");
             jLabel70.setText("");
             jLabel57.setText("");
         }
             
             if(panel.retrieveProperty("panelstate").equals("deparr")){
               listing=0;
                  pagenumber.setText("PAGE 1/1");
             jLabel48.setText("DEP/ARR INDEX ");
             jLabel51.setText("");
      
       
             jLabel52.setText("< DEP                           "+panelSelector.retrieveProperty("origin")+"                           ARR >");
             jLabel49.setText("");
             jLabel50.setText("                                "+panelSelector.retrieveProperty("dest")+"                           ARR >");
             jLabel54.setText("");
             jLabel53.setText("-------------------------------------------------------------------------------------------------------------");
             jLabel55.setText("");
             jLabel56.setText(" ");
             jLabel58.setText("");
             jLabel59.setText("");
             jLabel61.setText("");
             jLabel62.setText("");
             jLabel63.setText("");
             jLabel64.setText("");
             jLabel65.setText("");
             jLabel66.setText("");
             jLabel67.setText("");
             jLabel68.setText("");
             jLabel69.setText("");
             jLabel70.setText("");
             jLabel57.setText("");
         /*}if(panelSelector.retrieveProperty("panelstate").equals("rtepagedep1")){
             
         }*/
             }
             try{Thread.sleep(1000);}catch(InterruptedException ex){}
         
         }
        }
    
        });
    panelVerifier.start();
    
}
    
    
    
/*else if(currentText.charAt(length-1)=='+'){
    currentText=jLabel54.getText();
    currentText=currentText.substring(0,currentText.length()-1)+"-";
    jLabel54.setText(currentText);        // TODO add your handling code here:

}else{
    jLabel54.setText(currentText+"+");  
}
}
}int clicked=0;
    

   
 else if(clicked>=3){
 jLabel54.setText("");
 clicked=0;
 }
    }*/
        
         
         /**
     * @param args the command line arguments
     */
    
    public void intializePanel(){
      
     panelSelector.writeProperty("refairport", "----");
     panelSelector.writeProperty("gate", ""); 
        panelSelector.writeProperty("lastpos", "Not Available");
        panelSelector.writeProperty("gpspos", "Not Available");
        panelSelector.writeProperty("irspos", "---*--.- ----*--.-");
       panelSelector.writeProperty("panelstate","ident");
        panelSelector.writeProperty("origin", "----");
        panelSelector.writeProperty("runwaydep", "----");
        panelSelector.writeProperty("dest", "----");
        panelSelector.writeProperty("fltno", "----------");
        panelSelector.writeProperty("coroute", "----");
        panelSelector.writeProperty("groundweight", "00.00");
        panelSelector.writeProperty("fuel", "----");
        panelSelector.writeProperty("zfw", "---.- LB");
        panelSelector.writeProperty("reserves", "___._");
        panelSelector.writeProperty("crzalt","-----");
        panelSelector.writeProperty("costindex", "---");
        panelSelector.writeProperty("refairport", "----");
        panelSelector.writeProperty("crzcg", "__._%");
        panelSelector.writeProperty("refairport", "----");
        panelSelector.writeProperty("seltemp", "---°c");
        panelSelector.writeProperty("takeoffderate", "TO");
        panelSelector.writeProperty("climbselect", "CLB");
        panelSelector.writeProperty("takeoffflaps", "--");
        panelSelector.writeProperty("takeoffV1", "---");
        panelSelector.writeProperty("takeoffVR", "---");
        panelSelector.writeProperty("takeoffV2", "---");
        panelSelector.writeProperty("takeoffwinds", "---° /---");
        panelSelector.writeProperty("refairport", "----");
        panelSelector.writeProperty("transitionaltitude", "-----");
        
    }
    
    public static void main(String args[]) {
        MainApp obj1=new MainApp();
        
        obj1.panelSelector();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InitRef;
    private javax.swing.JLabel LSKL1;
    private javax.swing.JLabel LSKL2;
    private javax.swing.JLabel LSKL3;
    private javax.swing.JLabel LSKL4;
    private javax.swing.JLabel LSKL5;
    private javax.swing.JLabel LSKL6;
    private javax.swing.JLabel LSKR1;
    private javax.swing.JLabel LSKR2;
    private javax.swing.JLabel LSKR3;
    private javax.swing.JLabel LSKR4;
    private javax.swing.JLabel LSKR5;
    private javax.swing.JLabel LSKR6;
    private javax.swing.JLabel alternate1;
    private javax.swing.JLabel deparr1;
    private javax.swing.JLabel fix1;
    private javax.swing.JLabel fmccomm;
    private javax.swing.JLabel hold1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel legs1;
    private javax.swing.JLabel navrad;
    private javax.swing.JLabel nextpage;
    private javax.swing.JLabel pagenumber;
    private javax.swing.JLabel prevpage;
    private javax.swing.JLabel prog1;
    private javax.swing.JLabel rte1;
    private javax.swing.JLabel vnav1;
    // End of variables declaration//GEN-END:variables

}