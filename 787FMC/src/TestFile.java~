import java.io.*;
import java.util.*;
import java.lang.*;



class TestFile{
  
  
static WaypoimtAccess navDataPull=new WaypoimtAccess();
static FMCLogicTest accessLogic=new FMCLogicTest();
  public static void main(String [] args){
    TestFile obj1=new TestFile();
    System.out.println("TESTFILE INITIATED");
    
    getDirectionBWAirports("CYYZ","EGLL");
    
 List<String> waypoints=obj1.readLines();
 
 
 System.out.println("Element at 1 : "+ waypoints.get(0));
 System.out.println("Element at 2 : "+ waypoints.get(1));
 System.out.println("Element at 3 : "+ waypoints.get(2));
 
    double timeInit=System.nanoTime();
    
  
List<String> retain=new LinkedList<>();    
    
    
  ListIterator<String> iterate = waypoints.listIterator();
  
  String [] temp;
  
  Map<String , waypointsAirway> legsHoldAirway=new LinkedHashMap<>();
  Map<String, Airways> airways=new LinkedHashMap<>();
  String airwayIdent="";
  String line="";
  boolean start=false;
  int compareToAirport=0;
  
  
  
  for(int i=0;i<waypoints.size();i++){
    
    line=waypoints.get(i);
    
     temp=obj1.splitString(line,' ');
     
    if(line.startsWith("A1")&&start==false){
      start=true;
      airwayIdent=temp[0];
      retain.add(airwayIdent);
    }
    
    if(start==true){
      if(airwayIdent.equals(line.substring(0,line.indexOf(" ")))==false){
       // System.out.println(airwayIdent);
        retain.add(airwayIdent);
        obj1.writeLegObject(airwayIdent,legsHoldAirway);
        airwayIdent=temp[0];
        legsHoldAirway.clear();
      }
      
      legsHoldAirway.put(temp[2],new waypointsAirway(temp[2],temp[3],temp[4]));
      
      
    }
    
    
    
  }
    
    
    
   
//System.out.println(waypoints);
/*  Map<String,waypointsAirway> legs= new HashMap<>();
  try(FileInputStream readObj=new FileInputStream(System.getProperty("user.dir")+"/legs/A2.ser")){
    ObjectInputStream ois=new ObjectInputStream(readObj);
    legs=(HashMap)ois.readObject();
    
  }catch(IOException e){e.printStackTrace();}
  catch(ClassNotFoundException f){f.printStackTrace();}
  System.out.println(legs);*/
  }
  
  
  
  String airportDep="CYYZ";
  
  String AirportDest="EGLL";
  public static String[] latlongDep;
  public static String[] latlongArr;
  public static Double bearing1;
  
  double latitudeWpt;
  double longitudeWpt;
  double distance=0D;
  String [] latlongDepAir;
  
  public static String getDirectionBWAirports(String dep,String arr){
     latlongDep=accessLogic.getAirportLatLong(dep);
      latlongArr=accessLogic.getAirportLatLong(arr);
    
    
    
    bearing1= navDataPull.calcBearing(Double.valueOf(latlongDep[1]),Double.valueOf(latlongDep[2]),Double.valueOf(latlongArr[1]),Double.valueOf(latlongArr[2]));
    System.out.println( "Bearing :"+bearing1);
    
     int bearing = bearing1.intValue();
    if(bearing>=0&& bearing<=90){
     return "east"; 
    }else if(bearing>90&&bearing<=180){
    return "south";
    }else if(bearing>180&&bearing<=270){
     return "west"; 
    }else if(bearing==0||bearing==360){
     return "north"; 
    }
    return "nowhere";
  }
  
  
 
  
 
    public static String[] splitString(String line, char delimiter){
  
    List<String> splits=new LinkedList<>();
  int begin=0;
  int end=0;
   int j=0;
   String catchWord="";
   
 char[] charSplit=line.toCharArray();
 for(int i=0;i<charSplit.length;i++){
   if(charSplit[i]==delimiter){
     j=i;
     end = begin;
     while(end<i){
      catchWord=catchWord+charSplit[end]; 
      end++;
     }
     splits.add(catchWord);
     begin=i+1;
     catchWord="";
   }
 
   
 }
    splits.add(line.substring(line.lastIndexOf(delimiter)+1,line.length()));

  
   
  return splits.toArray(new String[splits.size()]);
 
  }
  
    public List<String> readLines(){
     List<String> linesRead=new LinkedList<>();
     
     String directory=System.getProperty("user.dir")+"/navdata/navdata/wpNavRTE.txt";
     String line="";
     try(BufferedReader br=new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(directory))))){
       while((line=br.readLine())!=null){
        linesRead.add(line); 
        // System.out.println(line);
         
         
       }
       
       
     }catch (IOException e){}
      
      return linesRead;
    }
    
    String legIdent="";
    public void writeLegObject(String airName, Map<String,waypointsAirway> legsStore){
      legIdent = System.getProperty("user.dir")+"/legs/";
     
  try( FileOutputStream writeObject= new FileOutputStream(legIdent+airName+".ser")){
 
  ObjectOutputStream oos=new ObjectOutputStream (writeObject);
  oos.writeObject(legsStore);
  }catch(IOException e){e.printStackTrace();}
    }
}
