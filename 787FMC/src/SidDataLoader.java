/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
 import java.io.*;
import java.util.*;
import java.lang.*;
import java.lang.Object;
import java.util.OptionalInt;
 /*
 * @author omer
 */
public class SidDataLoader extends javax.swing.JFrame {

    /**
     * Creates new form SidDataLoader
     */
    public SidDataLoader() {
        initComponents();
        setList(); 
        calculateIRS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        list1 = new java.awt.List();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                list1MousePressed(evt);
            }
        });
        list1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                list1ComponentShown(evt);
            }
        });

        label1.setFont(new java.awt.Font("Futura LtCn BT", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 372, Short.MAX_VALUE))
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(list1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void list1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_list1ComponentShown
setList();        // TODO add your handling code here:
    }//GEN-LAST:event_list1ComponentShown

    private void list1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list1MousePressed
       // TODO add your handling code here:
    }//GEN-LAST:event_list1MousePressed

    /**
     * @param args the command line arguments
     */
    
  
        PropertiesChecker obj1=new PropertiesChecker();
        WaypoimtAccess sidpull=new WaypoimtAccess();
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SidDataLoader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SidDataLoader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SidDataLoader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SidDataLoader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             
                new SidDataLoader().setVisible(true);
                
            }
        });
       
        
        
        
    }


public void setList(){
   String sid=obj1.retrieveProperty("SID");
        String rwy=obj1.retrieveProperty("Runway");
        String icao=obj1.retrieveProperty("ICAO");
        setText(icao, sid, rwy);
        List<String> waypoints=sidpull.getSIDWpt(icao, sid, rwy,null);
        
          
 
    for(int i=0;i<waypoints.size();i++){
     list1.add(waypoints.get(i));  
     
    }
}
public double c(Double d){
 double temp=Math.cos(d);
 return temp;
}

public double distanceNM(double lat1, double lat2, double lon1, double lon2) {
 
 
 double nd_lat = Math.toRadians(lat1);
 double nd_lat2 = Math.toRadians(lat2);
 
 double nd_dlat = Math.toRadians(lat2-lat1);
 double nd_dlon = Math.toRadians(lon2-lon1);
 
 double nd_a = Math.sin(nd_dlat/2)*Math.sin(nd_dlat/2)+Math.cos(nd_lat)*Math.cos(nd_lat2)*Math.sin(nd_dlon/2)*Math.sin(nd_dlon/2);
 double nd_b = 2 * Math.atan2(Math.sqrt(nd_a), Math.sqrt(1-nd_a));
 double nd_dis = nd_b * 3440.064795 ;
 
 return nd_dis;


}

public double calcBearing (double req_lat, double req_lon, double req_lat2, double req_lon2){
 
 double nd_lat = Math.toRadians(req_lat);
 double nd_lon = Math.toRadians(req_lon);
 
 double nd_lat2 = Math.toRadians(req_lat2);
 double nd_lon2 = Math.toRadians(req_lon2);
 
 double nd_y = Math.sin(nd_lon2 - nd_lon) * Math.cos(nd_lat2);
 double nd_x = Math.cos(nd_lat) * Math.sin(nd_lat2) - Math.sin(nd_lat) * Math.cos(nd_lat2) * Math.cos(nd_lon2 - nd_lon);
 double nd_hdg = Math.atan2(nd_y, nd_x);
 nd_hdg = Math.toDegrees(nd_hdg);
 nd_hdg = (nd_hdg + 360) % 360;
 
 return nd_hdg;
}

public void calculateIRS(){
    String sid=obj1.retrieveProperty("SID");
        String rwy=obj1.retrieveProperty("Runway");
        String icao=obj1.retrieveProperty("ICAO");
 List<String> waypoints=new ArrayList<String>();
 
 
 
 //waypoints.addAll(sidpull.getSIDWptLatLong(icao,sid,rwy));

 List<String> distmag=new ArrayList<String>();
 System.out.println("I'm here");
 for(int i=0;i<waypoints.size();i++){
     System.out.println(waypoints.get(i));
     
 }
 List <String> LatLong=new ArrayList<String>();
    String []temp;
    for(int i=0; i<waypoints.size();i++){
 temp=waypoints.get(i).split(",");
     LatLong.add(temp[2]);
     LatLong.add(temp[3]);
      
    }
    
    List<String> test = sidpull.runwayData(icao,rwy);
    
    LatLong.add(0,test.get(0));
    LatLong.add(1,test.get(1));
    
    for(int i=0;i<LatLong.size();i++){
      System.out.print((i)+": "+LatLong.get(i));
     System.out.println();
     
 }
    List<String> distance=new ArrayList<String>();
    
    for(int i=0; i<LatLong.size()-2;i+=2){
    int radius=6371;
    
    /*double Lat1=Math.toRadians(Double.parseDouble(LatLong.get(i)));
      double Lat2=Math.toRadians(Double.parseDouble(LatLong.get(i+2)));
      
      double Lat1D=Math.toRadians((Double.parseDouble(LatLong.get(i))-Double.parseDouble(LatLong.get(i+2))));
      double Lat2D=Math.toRadians(Double.parseDouble(LatLong.get(i+1))-Double.parseDouble(LatLong.get(i+3)));
      
      double a= Math.sin(Lat1D/2)*Math.sin(Lat1D/2)+Math.cos(Lat1)*Math.cos(Lat2)+Math.sin(Lat2D/2)*Math.sin(Lat2D/2);
      
      double c=2*Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
      
      double d= radius*c;
      
      double distance1=d*0.53996;
      String addition=Double.toString(distance1) + " nm";
      distance.add(addition);*/
    /*if(i>=2){
      System.out.printf("Calculating distance between Lat: %s Long: %s and Lat: %s Long; %s \n",LatLong.get(i),LatLong.get(i+1),LatLong.get(i-2),LatLong.get(i-1));
   /* double Lat1D=Double.parseDouble(LatLong.get(i+1));
      double Lat2D=Double.parseDouble(LatLong.get(i-1));
    double lat1=Double.parseDouble(LatLong.get(i));
      double lat2=Double.parseDouble(LatLong.get(i-2));
     double p = 0.017453292519943295;    // Math.PI / 180
  
  double a = 0.5 - c((lat2 - lat1) * p)/2 + 
          c(lat1 * p) * c(lat2 * p) * 
          (1 - c((Lat1D - Lat2D) * p))/2;

  String addition=Double.toString( Math.round((12742 * Math.asin(Math.sqrt(a)))*100)/100.0);
      distance.add(addition);
      */
 /*     double Lat1D=Double.parseDouble(LatLong.get(i+1));
      double Lat2D=Double.parseDouble(LatLong.get(i-1));
    double lat1=Double.parseDouble(LatLong.get(i));
      double lat2=Double.parseDouble(LatLong.get(i-2));*/
       double Lat1D=Double.parseDouble(LatLong.get(i+1));
      double Lat2D=Double.parseDouble(LatLong.get(i+3));
    double lat1=Double.parseDouble(LatLong.get(i));
      double lat2=Double.parseDouble(LatLong.get(i+2));
       distance.add(Double.toString(distanceNM(lat1,lat2,Lat1D,Lat2D)));
    
   /* if(i<2){
      
       System.out.printf("Calculating distance between Lat: %s Long: %s and Lat: %s Long; %s \n",LatLong.get(i),LatLong.get(i+1),LatLong.get(i+2),LatLong.get(i+3));
      /*double Lat1D=Double.parseDouble(LatLong.get(i+1));
      double Lat2D=Double.parseDouble(LatLong.get(i+3));
    double lat1=Double.parseDouble(LatLong.get(i));
      double lat2=Double.parseDouble(LatLong.get(i+1));
     double p = 0.017453292519943295;    // Math.PI / 180
  
  double a = 0.5 - c((lat2 - lat1) * p)/2 + 
          c(lat1 * p) * c(lat2 * p) * 
          (1 - c((Lat1D - Lat2D) * p))/2;

  String addition=Double.toString( (Math.round((12742 * Math.asin(Math.sqrt(a)))*100)/100.0)*0.53996);
  
      double Lat1D=Double.parseDouble(LatLong.get(i+1));
      double Lat2D=Double.parseDouble(LatLong.get(i+3));
    double lat1=Double.parseDouble(LatLong.get(i));
      double lat2=Double.parseDouble(LatLong.get(i+2));
      distance.add(Double.toString(distanceNM(lat1,lat2,Lat1D,Lat2D)));
    }
    */
    }
     System.out.println(distance);
    }
   
    
    


public void setText(String x, String y, String z){
 label1.setText("Waypoints for SID: "+y+" Runway: "+z+" At ICAO: "+x);   
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private java.awt.Label label1;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
}
